---
openapi: 3.0.3
info:
  title: Dataverse API
  description: Open source research data repository software.
  version: "6.5"
tags:
- name: addFileToDataset
  description: Uploads a file for a dataset
- name: addFilesToDataset
  description: Uploads a set of files to a dataset
- name: addGlobusFilesToDataset
  description: Uploads a Globus file for a dataset
- name: info
  description: General information about the Dataverse installation.
- name: replaceFilesInDataset
  description: Replace a file to a dataset
- name: saveAuxiliaryFileWithVersion
  description: Save Auxiliary File With Version
- name: uploadDatasetLogo
  description: Uploads a logo for a dataset
paths:
  /access/datafile/bundle/{fileId}:
    get:
      operationId: Access_datafileBundle
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          format: int64
          type: integer
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/BundleDownloadInstance'
  /access/datafile/{fileId}:
    get:
      operationId: Access_datafile
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          pattern: .+
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /access/datafile/{fileId}/auxiliary:
    get:
      operationId: Access_listDatafileMetadataAux
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafile/{fileId}/auxiliary/{formatTag}/{formatVersion}:
    get:
      operationId: Access_downloadAuxiliaryFile
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: formatTag
        in: path
        required: true
        schema:
          type: string
      - name: formatVersion
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DownloadInstance'
    post:
      tags:
      - saveAuxiliaryFileWithVersion
      summary: Save auxiliary file with version
      description: Saves an auxiliary file
      operationId: Access_saveAuxiliaryFileWithVersion
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: formatTag
        in: path
        required: true
        schema:
          type: string
      - name: formatVersion
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        "200":
          description: File saved response
        "403":
          description: User not authorized to edit the dataset.
        "400":
          description: File not found based on id.
    delete:
      operationId: Access_deleteAuxiliaryFileWithVersion
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: formatTag
        in: path
        required: true
        schema:
          type: string
      - name: formatVersion
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafile/{fileId}/auxiliary/{origin}:
    get:
      operationId: Access_listDatafileMetadataAuxByOrigin
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: origin
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafile/{fileId}/metadata:
    get:
      operationId: Access_tabularDatafileMetadata
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: exclude
        in: query
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          format: int64
          type: integer
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/xml:
              schema:
                type: string
  /access/datafile/{fileId}/metadata/ddi:
    get:
      operationId: Access_tabularDatafileMetadataDDI
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: exclude
        in: query
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          format: int64
          type: integer
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/xml:
              schema:
                type: string
  /access/datafile/{id}/grantAccess/{identifier}:
    put:
      operationId: Access_grantFileAccess
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafile/{id}/listRequests:
    get:
      operationId: Access_listFileAccessRequests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafile/{id}/rejectAccess/{identifier}:
    put:
      operationId: Access_rejectFileAccess
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafile/{id}/requestAccess:
    put:
      operationId: Access_requestFileAccess
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafile/{id}/revokeAccess/{identifier}:
    delete:
      operationId: Access_revokeFileAccess
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafile/{id}/userFileAccessRequested:
    get:
      operationId: Access_getUserFileAccessRequested
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafile/{id}/userPermissions:
    get:
      operationId: Access_getUserPermissionsOnFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/datafiles:
    post:
      operationId: Access_postDownloadDatafiles
      parameters:
      - name: gbrecs
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /access/datafiles/{fileIds}:
    get:
      operationId: Access_datafiles
      parameters:
      - name: fileIds
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /access/dataset/{id}:
    get:
      operationId: Access_downloadAllFromLatest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /access/dataset/{id}/versions/{versionId}:
    get:
      operationId: Access_downloadAllFromVersion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /access/dsCardImage/{versionId}:
    get:
      operationId: Access_dsCardImage
      parameters:
      - name: versionId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            image/png:
              schema:
                format: binary
                type: string
  /access/dvCardImage/{dataverseId}:
    get:
      operationId: Access_dvCardImage
      parameters:
      - name: dataverseId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            image/png:
              schema:
                format: binary
                type: string
  /access/fileCardImage/{fileId}:
    get:
      operationId: Access_fileCardImage
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            image/png:
              schema:
                format: binary
                type: string
  /access/{id}/allowAccessRequest:
    put:
      operationId: Access_allowAccessRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/archiveAllUnarchivedDatasetVersions:
    post:
      operationId: Admin_archiveAllUnarchivedDatasetVersions
      parameters:
      - name: latestonly
        in: query
        schema:
          type: boolean
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: listonly
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /admin/assignee/{idtf}:
    get:
      operationId: Admin_findRoleAssignee
      parameters:
      - name: idtf
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/assignments/assignees/{raIdtf}:
    get:
      operationId: Admin_getAssignmentsFor
      parameters:
      - name: raIdtf
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        "200":
          description: OK
  /admin/authenticatedUsers:
    get:
      operationId: Admin_listAuthenticatedUsers
      responses:
        "200":
          description: OK
      deprecated: true
    post:
      operationId: Admin_createAuthenicatedUser
      responses:
        "200":
          description: OK
  /admin/authenticatedUsers/convert/builtin2oauth:
    put:
      operationId: Admin_builtin2oauth
      responses:
        "200":
          description: OK
  /admin/authenticatedUsers/convert/builtin2shib:
    put:
      operationId: Admin_builtin2shib
      responses:
        "200":
          description: OK
  /admin/authenticatedUsers/id/{id}:
    delete:
      operationId: Admin_deleteAuthenticatedUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/authenticatedUsers/id/{id}/convertRemoteToBuiltIn:
    put:
      operationId: Admin_convertOAuthUserToBuiltin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/authenticatedUsers/id/{id}/convertShibToBuiltIn:
    put:
      operationId: Admin_convertShibUserToBuiltin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
      deprecated: true
  /admin/authenticatedUsers/id/{id}/deactivate:
    post:
      operationId: Admin_deactivateAuthenticatedUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/authenticatedUsers/{identifier}:
    get:
      operationId: Admin_getAuthenticatedUserByIdentifier
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Admin_deleteAuthenticatedUser
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/authenticatedUsers/{identifier}/deactivate:
    post:
      operationId: Admin_deactivateAuthenticatedUser
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/authenticationProviderFactories:
    get:
      operationId: Admin_listAuthProviderFactories
      responses:
        "200":
          description: OK
  /admin/authenticationProviders:
    get:
      operationId: Admin_listAuthProviders
      responses:
        "200":
          description: OK
    post:
      operationId: Admin_addProvider
      responses:
        "200":
          description: OK
  /admin/authenticationProviders/{id}:
    get:
      operationId: Admin_showProvider
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Admin_deleteAuthenticationProvider
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/authenticationProviders/{id}/:enabled:
    post:
      operationId: Admin_enableAuthenticationProvider_deprecated
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/authenticationProviders/{id}/enabled:
    get:
      operationId: Admin_checkAuthenticationProviderEnabled
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Admin_enableAuthenticationProvider
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/bannerMessage:
    get:
      operationId: Admin_getBannerMessages
      responses:
        "200":
          description: OK
    post:
      operationId: Admin_addBannerMessage
      responses:
        "200":
          description: OK
  /admin/bannerMessage/{id}:
    delete:
      operationId: Admin_deleteBannerMessage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/bannerMessage/{id}/deactivate:
    put:
      operationId: Admin_deactivateBannerMessage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/batch/jobs:
    get:
      operationId: BatchJobResource_listBatchJobs
      responses:
        "200":
          description: OK
  /admin/batch/jobs/name/{jobName}:
    get:
      operationId: BatchJobResource_listBatchJobsByName
      parameters:
      - name: jobName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/batch/jobs/{jobId}:
    get:
      operationId: BatchJobResource_listBatchJobById
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/clearMetricsCache:
    delete:
      operationId: Admin_clearMetricsCache
      responses:
        "200":
          description: OK
  /admin/clearMetricsCache/{name}:
    delete:
      operationId: Admin_clearMetricsCacheByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/clearThumbnailFailureFlag:
    delete:
      operationId: Admin_clearThumbnailFailureFlag
      responses:
        "200":
          description: OK
  /admin/clearThumbnailFailureFlag/{id}:
    delete:
      operationId: Admin_clearThumbnailFailureFlagByDatafile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/computeDataFileHashValue/{fileId}/algorithm/{alg}:
    post:
      operationId: Admin_computeDataFileHashValue
      parameters:
      - name: alg
        in: path
        required: true
        schema:
          type: string
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/confirmEmail/{userId}:
    get:
      operationId: Admin_getConfirmEmailToken
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    post:
      operationId: Admin_startConfirmEmailProcess
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/convertUserFromBcryptToSha1:
    post:
      operationId: Admin_convertUserFromBcryptToSha1
      responses:
        "200":
          description: OK
  /admin/datafiles/auditFiles:
    get:
      operationId: Admin_getAuditFiles
      parameters:
      - name: datasetIdentifierList
        in: query
        schema:
          type: string
      - name: firstId
        in: query
        schema:
          format: int64
          type: integer
      - name: lastId
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/datafiles/integrity/fixmissingoriginalsizes:
    get:
      operationId: Admin_fixMissingOriginalSizes
      parameters:
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
  /admin/datafiles/integrity/fixmissingoriginaltypes:
    get:
      operationId: Admin_fixMissingOriginalTypes
      responses:
        "200":
          description: OK
  /admin/datasetfield:
    get:
      operationId: DatasetFieldServiceApi_getAll
      responses:
        "200":
          description: OK
  /admin/datasetfield/controlledVocabulary/subject:
    get:
      operationId: DatasetFieldServiceApi_showControlledVocabularyForSubject
      responses:
        "200":
          description: OK
  /admin/datasetfield/load:
    post:
      operationId: DatasetFieldServiceApi_loadDatasetFields
      requestBody:
        content:
          text/tab-separated-values:
            schema:
              format: binary
              type: string
      responses:
        "200":
          description: OK
  /admin/datasetfield/loadNAControlledVocabularyValue:
    get:
      operationId: DatasetFieldServiceApi_loadNAControlledVocabularyValue
      responses:
        "200":
          description: OK
  /admin/datasetfield/loadpropertyfiles:
    post:
      operationId: DatasetFieldServiceApi_loadLanguagePropertyFile
      requestBody:
        content:
          application/zip:
            schema:
              format: binary
              type: string
      responses:
        "200":
          description: OK
  /admin/datasetfield/{name}:
    get:
      operationId: DatasetFieldServiceApi_getByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/datasets/integrity/{datasetVersionId}/fixmissingunf:
    post:
      operationId: Admin_fixUnf
      parameters:
      - name: datasetVersionId
        in: path
        required: true
        schema:
          type: string
      - name: forceRecalculate
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /admin/datasets/thumbnailMetadata/{id}:
    get:
      operationId: Admin_getDatasetThumbnailMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/dataverse/curationLabelSets:
    get:
      operationId: Admin_listCurationLabelSets
      responses:
        "200":
          description: OK
  /admin/dataverse/storageDrivers:
    get:
      operationId: Admin_listStorageDrivers
      responses:
        "200":
          description: OK
  /admin/dataverse/{alias}/addRoleAssignmentsToChildren:
    get:
      operationId: Admin_addRoleAssignementsToChildren
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/dataverse/{alias}/curationLabelSet:
    get:
      operationId: Admin_getCurationLabelSet
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Admin_setCurationLabelSet
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Admin_resetCurationLabelSet
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/dataverse/{alias}/storageDriver:
    get:
      operationId: Admin_getStorageDriver
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Admin_setStorageDriver
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Admin_resetStorageDriver
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/downloadTmpFile:
    get:
      operationId: Admin_downloadTmpFile
      parameters:
      - name: fullyQualifiedPathToFile
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/externalTools:
    get:
      operationId: ExternalTools_getExternalTools
      responses:
        "200":
          description: OK
    post:
      operationId: ExternalTools_addExternalTool
      responses:
        "200":
          description: OK
  /admin/externalTools/{id}:
    get:
      operationId: ExternalTools_getExternalTool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      operationId: ExternalTools_deleteExternalTool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/featureFlags:
    get:
      operationId: Admin_getFeatureFlags
      responses:
        "200":
          description: OK
  /admin/featureFlags/{flag}:
    get:
      operationId: Admin_getFeatureFlag
      parameters:
      - name: flag
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/feedback:
    post:
      operationId: FeedbackApi_submitFeedback
      responses:
        "200":
          description: OK
  /admin/groups/domain:
    get:
      operationId: Groups_listMailDomainGroups
      responses:
        "200":
          description: OK
    post:
      operationId: Groups_createMailDomainGroup
      responses:
        "200":
          description: OK
  /admin/groups/domain/{groupAlias}:
    get:
      operationId: Groups_getMailDomainGroup
      parameters:
      - name: groupAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Groups_updateMailDomainGroups
      parameters:
      - name: groupAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Groups_deleteMailDomainGroup
      parameters:
      - name: groupAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/groups/ip:
    get:
      operationId: Groups_listIpGroups
      responses:
        "200":
          description: OK
    post:
      operationId: Groups_postIpGroup
      responses:
        "200":
          description: OK
  /admin/groups/ip/{group}:
    get:
      operationId: Groups_getIpGroup
      parameters:
      - name: group
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Groups_putIpGroups
      parameters:
      - name: group
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Groups_deleteIpGroup
      parameters:
      - name: group
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/groups/shib:
    get:
      operationId: Groups_listShibGroups
      responses:
        "200":
          description: OK
    post:
      operationId: Groups_createShibGroup
      responses:
        "200":
          description: OK
  /admin/groups/shib/{primaryKey}:
    delete:
      operationId: Groups_deleteShibGroup
      parameters:
      - name: primaryKey
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/index:
    get:
      operationId: Index_indexAllOrSubset
      parameters:
      - name: numPartitions
        in: query
        schema:
          format: int64
          type: integer
      - name: partitionIdToProcess
        in: query
        schema:
          format: int64
          type: integer
      - name: previewOnly
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /admin/index/clear:
    get:
      operationId: Index_clearSolrIndex
      responses:
        "200":
          description: OK
  /admin/index/clear-orphans:
    get:
      operationId: Index_clearOrphans
      parameters:
      - name: sync
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/index/continue:
    get:
      operationId: Index_indexAllOrSubsetContinue
      parameters:
      - name: numPartitions
        in: query
        schema:
          format: int64
          type: integer
      - name: partitionIdToProcess
        in: query
        schema:
          format: int64
          type: integer
      - name: previewOnly
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /admin/index/dataset:
    get:
      operationId: Index_indexDatasetByPersistentId
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/index/datasets/{id}:
    delete:
      operationId: Index_clearDatasetFromIndex
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/index/filemetadata/{dataset_id}:
    get:
      operationId: Index_getFileMetadataByDatasetId
      parameters:
      - name: dataset_id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      - name: order
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/index/filesearch:
    get:
      operationId: Index_filesearch
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      - name: q
        in: query
        schema:
          type: string
      - name: semanticVersion
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/index/mod:
    get:
      operationId: Index_indexMod
      parameters:
      - name: partitions
        in: query
        schema:
          format: int64
          type: integer
      - name: which
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/index/perms:
    get:
      operationId: Index_indexAllPermissions
      responses:
        "200":
          description: OK
  /admin/index/perms/{id}:
    get:
      operationId: Index_indexPermissions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/index/permsDebug:
    get:
      operationId: Index_searchPermsDebug
      parameters:
      - name: id
        in: query
        schema:
          format: int64
          type: integer
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/index/solr/schema:
    get:
      operationId: Index_getSolrSchema
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /admin/index/status:
    get:
      operationId: Index_indexStatus
      parameters:
      - name: sync
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/index/test:
    get:
      operationId: Index_searchDebug
      parameters:
      - name: fq
        in: query
        schema:
          type: array
          items:
            type: string
      - name: key
        in: query
        schema:
          type: string
      - name: q
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/index/timestamps:
    delete:
      operationId: Index_deleteAllTimestamps
      responses:
        "200":
          description: OK
  /admin/index/timestamps/{dvObjectId}:
    delete:
      operationId: Index_deleteTimestamp
      parameters:
      - name: dvObjectId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/index/{type}/{id}:
    get:
      operationId: Index_indexTypeById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/isOrcid:
    get:
      operationId: Admin_isOrcidEnabled
      responses:
        "200":
          description: OK
  /admin/list-users:
    get:
      operationId: Admin_filterAuthenticatedUsers
      parameters:
      - name: itemsPerPage
        in: query
        schema:
          format: int32
          type: integer
      - name: searchTerm
        in: query
        schema:
          type: string
      - name: selectedPage
        in: query
        schema:
          format: int32
          type: integer
      - name: sortKey
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/makeDataCount/addUsageMetricsFromSushiReport:
    post:
      operationId: MakeDataCountApi_addUsageMetricsFromSushiReportAll
      parameters:
      - name: reportOnDisk
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/makeDataCount/sendToHub:
    post:
      operationId: MakeDataCountApi_sendDataToHub
      responses:
        "200":
          description: OK
  /admin/makeDataCount/{id}/addUsageMetricsFromSushiReport:
    post:
      operationId: MakeDataCountApi_addUsageMetricsFromSushiReport
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: reportOnDisk
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/makeDataCount/{id}/updateCitationsForDataset:
    post:
      operationId: MakeDataCountApi_updateCitationsForDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/makeDataCount/{yearMonth}/processingState:
    get:
      operationId: MakeDataCountApi_getProcessingState
      parameters:
      - name: yearMonth
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: MakeDataCountApi_updateProcessingState
      parameters:
      - name: yearMonth
        in: path
        required: true
        schema:
          type: string
      - name: state
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: MakeDataCountApi_deleteProcessingState
      parameters:
      - name: yearMonth
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/metadata/clearExportTimestamps:
    get:
      operationId: Metadata_clearExportTimestamps
      responses:
        "200":
          description: OK
  /admin/metadata/exportAll:
    get:
      operationId: Metadata_exportAll
      responses:
        "200":
          description: OK
  /admin/metadata/exportOAI/{specname}:
    put:
      operationId: Metadata_exportOaiSet
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/metadata/reExportAll:
    get:
      operationId: Metadata_reExportAll
      responses:
        "200":
          description: OK
  /admin/metadata/{id}/reExportDataset:
    get:
      operationId: Metadata_indexDatasetByPersistentId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/permissions/{dvo}:
    get:
      operationId: Admin_findPermissonsOn
      parameters:
      - name: dvo
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/publishDataverseAsCreator/{id}:
    post:
      operationId: Admin_publishDataverseAsCreator
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/registerDataFileAll:
    get:
      operationId: Admin_registerDataFileAll
      responses:
        "200":
          description: OK
  /admin/registerDataFiles/{alias}:
    get:
      operationId: Admin_registerDataFilesInCollection
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      - name: sleep
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
  /admin/requestSignedUrl:
    post:
      operationId: Admin_getSignedUrl
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
  /admin/roles:
    get:
      operationId: Admin_listBuiltinRoles
      responses:
        "200":
          description: OK
    post:
      operationId: Admin_createNewBuiltinRole
      responses:
        "200":
          description: OK
  /admin/roles/{id}:
    put:
      operationId: Admin_updateBuiltinRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      operationId: Admin_deleteRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/savedsearches:
    get:
      operationId: SavedSearches_meta
      responses:
        "200":
          description: OK
    post:
      operationId: SavedSearches_add
      responses:
        "200":
          description: OK
  /admin/savedsearches/list:
    get:
      operationId: SavedSearches_list
      responses:
        "200":
          description: OK
  /admin/savedsearches/makelinks/all:
    put:
      operationId: SavedSearches_makeLinksForAllSavedSearches
      parameters:
      - name: debug
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /admin/savedsearches/makelinks/{id}:
    put:
      operationId: SavedSearches_makeLinksForSingleSavedSearch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: debug
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /admin/savedsearches/{id}:
    get:
      operationId: SavedSearches_show
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      operationId: SavedSearches_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: unlink
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /admin/settings:
    get:
      operationId: Admin_listAllSettings
      responses:
        "200":
          description: OK
  /admin/settings/{name}:
    get:
      operationId: Admin_getSetting
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Admin_putSetting
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Admin_deleteSetting
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/settings/{name}/lang/{lang}:
    put:
      operationId: Admin_putSettingLang
      parameters:
      - name: lang
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Admin_deleteSettingLang
      parameters:
      - name: lang
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/sitemap:
    post:
      operationId: SiteMap_updateSiteMap
      responses:
        "200":
          description: OK
  /admin/storageSites:
    get:
      operationId: StorageSites_listAll
      responses:
        "200":
          description: OK
    post:
      operationId: StorageSites_addSite
      responses:
        "200":
          description: OK
  /admin/storageSites/{id}:
    get:
      operationId: StorageSites_get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      operationId: StorageSites_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/storageSites/{id}/primaryStorage:
    put:
      operationId: StorageSites_setPrimary
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/submitDatasetVersionToArchive/{id}/{version}:
    post:
      operationId: Admin_submitDatasetVersionToArchive
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/superuser/{identifier}:
    put:
      operationId: Admin_setSuperuserStatus
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Admin_toggleSuperuser
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      deprecated: true
  /admin/template/{id}:
    delete:
      operationId: Admin_deleteTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /admin/templates:
    get:
      operationId: Admin_findAllTemplates
      responses:
        "200":
          description: OK
  /admin/templates/{alias}:
    get:
      operationId: Admin_findTemplates
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/test/datasets/{id}/externalTool/{toolId}:
    get:
      operationId: TestApi_getExternalToolforDatasetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: toolId
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/test/datasets/{id}/externalTools:
    get:
      operationId: TestApi_getDatasetExternalToolsforFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/test/files/{id}/externalTool/{toolId}:
    get:
      operationId: TestApi_getExternalToolForFileById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: toolId
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/test/files/{id}/externalTools:
    get:
      operationId: TestApi_getExternalToolsForFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/updateHashValues/{alg}:
    get:
      operationId: Admin_updateHashValues
      parameters:
      - name: alg
        in: path
        required: true
        schema:
          type: string
      - name: num
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
  /admin/validate/dataset/files/{id}:
    get:
      operationId: Admin_validateDatasetDatafiles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/validate/dataset/{id}:
    get:
      operationId: Admin_validateDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: variables
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /admin/validate/datasets:
    get:
      operationId: Admin_validateAllDatasets
      parameters:
      - name: variables
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /admin/validateDataFileHashValue/{fileId}:
    post:
      operationId: Admin_validateDataFileHashValue
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/validatePassword:
    post:
      operationId: Admin_validatePassword
      responses:
        "200":
          description: OK
  /admin/workflows:
    get:
      operationId: WorkflowsAdmin_listWorkflows
      responses:
        "200":
          description: OK
    post:
      operationId: WorkflowsAdmin_addWorkflow
      responses:
        "200":
          description: OK
  /admin/workflows/default:
    get:
      operationId: WorkflowsAdmin_listDefaults
      responses:
        "200":
          description: OK
  /admin/workflows/default/{triggerType}:
    get:
      operationId: WorkflowsAdmin_getDefault
      parameters:
      - name: triggerType
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: WorkflowsAdmin_setDefault
      parameters:
      - name: triggerType
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: WorkflowsAdmin_deleteDefault
      parameters:
      - name: triggerType
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/workflows/ip-whitelist:
    get:
      operationId: WorkflowsAdmin_getIpWhitelist
      responses:
        "200":
          description: OK
    put:
      operationId: WorkflowsAdmin_setIpWhitelist
      responses:
        "200":
          description: OK
    delete:
      operationId: WorkflowsAdmin_deleteIpWhitelist
      responses:
        "200":
          description: OK
  /admin/workflows/{id}:
    get:
      operationId: WorkflowsAdmin_getWorkflow
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: WorkflowsAdmin_deleteWorkflow
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/{id}/registerDataFile:
    get:
      operationId: Admin_registerDataFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /admin/{id}/reregisterHDLToPID:
    post:
      operationId: Admin_reregisterHdlToPID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /batch/harvest:
    get:
      operationId: BatchImport_harvest
      parameters:
      - name: createDV
        in: query
        schema:
          type: boolean
      - name: dv
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /batch/import:
    get:
      operationId: BatchImport_getImport
      parameters:
      - name: createDV
        in: query
        schema:
          type: boolean
      - name: dv
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: BatchImport_postImport
      parameters:
      - name: dv
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /batch/jobs/import/datasets/files/{identifier}:
    post:
      operationId: FileRecordJobResource_getFilesystemImport
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: mode
        in: query
        schema:
          default: MERGE
          type: string
      - name: totalSize
        in: query
        schema:
          format: int64
          type: integer
      - name: uploadFolder
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /builtin-users:
    post:
      operationId: BuiltinUsers_save
      parameters:
      - name: key
        in: query
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      - name: sendEmailNotification
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /builtin-users/{password}/{key}:
    post:
      operationId: BuiltinUsers_create
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: password
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /builtin-users/{password}/{key}/{sendEmailNotification}:
    post:
      operationId: BuiltinUsers_createWithNotification
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: password
        in: path
        required: true
        schema:
          type: string
      - name: sendEmailNotification
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /builtin-users/{username}/api-token:
    get:
      operationId: BuiltinUsers_getApiToken
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasetfields/facetables:
    get:
      operationId: DatasetFields_listAllFacetableDatasetFields
      responses:
        "200":
          description: OK
  /datasets/datasetTypes:
    get:
      operationId: Datasets_getDatasetTypes
      responses:
        "200":
          description: OK
    post:
      operationId: Datasets_addDatasetType
      responses:
        "200":
          description: OK
  /datasets/datasetTypes/{idOrName}:
    get:
      operationId: Datasets_getDatasetTypes
      parameters:
      - name: idOrName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/datasetTypes/{id}:
    delete:
      operationId: Datasets_deleteDatasetType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/export:
    get:
      operationId: Datasets_exportDataset
      parameters:
      - name: exporter
        in: query
        schema:
          type: string
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/listCurationStates:
    get:
      operationId: Datasets_getCurationStates
      responses:
        "200":
          description: OK
  /datasets/locks:
    get:
      operationId: Datasets_listLocks
      parameters:
      - name: type
        in: query
        schema:
          type: string
      - name: userIdentifier
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/modifyRegistrationAll:
    post:
      operationId: Datasets_updateDatasetTargetURLAll
      responses:
        "200":
          description: OK
  /datasets/modifyRegistrationPIDMetadataAll:
    post:
      operationId: Datasets_updateDatasetPIDMetadataAll
      responses:
        "200":
          description: OK
  /datasets/mpupload:
    put:
      operationId: Datasets_completeMPUpload
      parameters:
      - name: globalid
        in: query
        schema:
          type: string
      - name: storageidentifier
        in: query
        schema:
          type: string
      - name: uploadid
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_abortMPUpload
      parameters:
      - name: globalid
        in: query
        schema:
          type: string
      - name: storageidentifier
        in: query
        schema:
          type: string
      - name: uploadid
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/previewUrlDatasetVersion/{previewUrlToken}:
    get:
      operationId: Datasets_getPreviewUrlDatasetVersion
      parameters:
      - name: previewUrlToken
        in: path
        required: true
        schema:
          type: string
      - name: returnOwners
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /datasets/previewUrlDatasetVersion/{previewUrlToken}/citation:
    get:
      operationId: Datasets_getPreviewUrlDatasetVersionCitation
      parameters:
      - name: previewUrlToken
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/privateUrlDatasetVersion/{privateUrlToken}:
    get:
      operationId: Datasets_getPrivateUrlDatasetVersion
      parameters:
      - name: privateUrlToken
        in: path
        required: true
        schema:
          type: string
      - name: returnOwners
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /datasets/privateUrlDatasetVersion/{privateUrlToken}/citation:
    get:
      operationId: Datasets_getPrivateUrlDatasetVersionCitation
      parameters:
      - name: privateUrlToken
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/summaryFieldNames:
    get:
      operationId: Datasets_getDatasetSummaryFieldNames
      responses:
        "200":
          description: OK
  /datasets/{datasetId}/deleteLink/{linkedDataverseId}:
    delete:
      operationId: Datasets_deleteDatasetLinkingDataverse
      parameters:
      - name: datasetId
        in: path
        required: true
        schema:
          type: string
      - name: linkedDataverseId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/allowedCurationLabels:
    get:
      operationId: Datasets_getAllowedCurationLabels
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/assignments:
    get:
      operationId: Datasets_getAssignments
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Datasets_createAssignment
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/assignments/{id}:
    delete:
      operationId: Datasets_deleteAssignment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/curationLabelSet:
    get:
      operationId: Datasets_getCurationLabelSet
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Datasets_setCurationLabelSet
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_resetCurationLabelSet
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/dataCaptureModule/checksumValidation:
    post:
      operationId: Datasets_receiveChecksumValidationResults
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/dataCaptureModule/rsync:
    get:
      operationId: Datasets_getRsync
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      deprecated: true
  /datasets/{identifier}/guestbookEntryAtRequest:
    get:
      operationId: Datasets_getGuestbookEntryOption
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Datasets_setguestbookEntryAtRequest
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_resetGuestbookEntryAtRequest
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/lock/{type}:
    post:
      operationId: Datasets_lockDataset
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Reason'
      responses:
        "200":
          description: OK
  /datasets/{identifier}/locks:
    get:
      operationId: Datasets_getLocksForDataset
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          $ref: '#/components/schemas/Reason'
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_deleteLocks
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          $ref: '#/components/schemas/Reason'
      responses:
        "200":
          description: OK
  /datasets/{identifier}/pidGenerator:
    get:
      operationId: Datasets_getPidGenerator
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Datasets_setPidGenerator
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_resetPidGenerator
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/storageDriver:
    get:
      operationId: Datasets_getFileStore
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Datasets_setFileStore
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_resetFileStore
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/storagesize:
    get:
      operationId: Datasets_getStorageSize
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: includeCached
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /datasets/{identifier}/timestamps:
    get:
      operationId: Datasets_getTimestamps
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{identifier}/versions/{versionId}/downloadsize:
    get:
      operationId: Datasets_getDownloadSize
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: accessStatus
        in: query
        schema:
          type: string
      - name: categoryName
        in: query
        schema:
          type: string
      - name: contentType
        in: query
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      - name: mode
        in: query
        schema:
          type: string
      - name: searchText
        in: query
        schema:
          type: string
      - name: tabularTagName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}:
    get:
      operationId: Datasets_getDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: returnOwners
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_deleteDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/actions/:publish:
    get:
      operationId: Datasets_publishDataseUsingGetDeprecated
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
      deprecated: true
    post:
      operationId: Datasets_publishDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: assureIsIndexed
        in: query
        schema:
          type: boolean
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/actions/:releasemigrated:
    post:
      operationId: Datasets_publishMigratedDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: updatepidatprovider
        in: query
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/add:
    post:
      tags:
      - addFileToDataset
      summary: Uploads a file for a dataset
      description: Uploads a file for a dataset
      operationId: Datasets_addFileToDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        "200":
          description: File uploaded successfully to dataset
  /datasets/{id}/addFiles:
    post:
      tags:
      - addFilesToDataset
      summary: Uploads a set of files to a dataset
      description: Uploads a set of files to a dataset
      operationId: Datasets_addFilesToDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        "200":
          description: Files uploaded successfully to dataset
  /datasets/{id}/addGlobusFiles:
    post:
      tags:
      - addGlobusFilesToDataset
      summary: Uploads a Globus file for a dataset
      description: Uploads a Globus file for a dataset
      operationId: Datasets_addGlobusFilesToDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        "200":
          description: Globus file uploaded successfully to dataset
  /datasets/{id}/citationdate:
    put:
      operationId: Datasets_setCitationDate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_useDefaultCitationDate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/cleanStorage:
    get:
      operationId: Datasets_cleanStorage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: dryrun
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /datasets/{id}/curationStatus:
    get:
      operationId: Datasets_getCurationStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Datasets_setCurationStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: label
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_deleteCurationStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/deleteMetadata:
    put:
      operationId: Datasets_deleteVersionMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/destroy:
    delete:
      operationId: Datasets_destroyDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/dirindex:
    get:
      operationId: Datasets_getFileAccessFolderView
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: folder
        in: query
        schema:
          type: string
      - name: original
        in: query
        schema:
          type: boolean
      - name: version
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/editMetadata:
    put:
      operationId: Datasets_editVersionMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: replace
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /datasets/{id}/files/actions/:set-embargo:
    post:
      operationId: Datasets_createFileEmbargo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/files/actions/:set-retention:
    post:
      operationId: Datasets_createFileRetention
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/files/actions/:unset-embargo:
    post:
      operationId: Datasets_removeFileEmbargo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/files/actions/:unset-retention:
    post:
      operationId: Datasets_removeFileRetention
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/globusDownloadParameters:
    get:
      operationId: Datasets_getGlobusDownloadParams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: downloadId
        in: query
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/globusUploadParameters:
    get:
      operationId: Datasets_getGlobusUploadParams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/links:
    get:
      operationId: Datasets_getLinks
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/logo:
    get:
      operationId: Datasets_getDatasetLogo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/makeDataCount/citations:
    get:
      operationId: Datasets_getMakeDataCountCitations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/makeDataCount/{metric}:
    get:
      operationId: Datasets_getMakeDataCountMetricCurrentMonth
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/makeDataCount/{metric}/{yyyymm}:
    get:
      operationId: Datasets_getMakeDataCountMetric
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/metadata:
    get:
      operationId: Datasets_getJsonLDMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Datasets_updateVersionMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: replace
        in: query
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/metadata/delete:
    put:
      operationId: Datasets_deleteMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/modifyRegistration:
    post:
      operationId: Datasets_updateDatasetTargetURL
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/modifyRegistrationMetadata:
    post:
      operationId: Datasets_updateDatasetPIDMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/monitorGlobusDownload:
    post:
      operationId: Datasets_monitorGlobusDownload
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/move/{targetDataverseAlias}:
    post:
      operationId: Datasets_moveDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: targetDataverseAlias
        in: path
        required: true
        schema:
          type: string
      - name: forceMove
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /datasets/{id}/previewUrl:
    get:
      operationId: Datasets_getPreviewUrlData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Datasets_createPreviewUrl
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: anonymizedAccess
        in: query
        schema:
          default: false
          type: boolean
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_deletePreviewUrl
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/privateUrl:
    get:
      operationId: Datasets_getPrivateUrlData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      deprecated: true
    post:
      operationId: Datasets_createPrivateUrl
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: anonymizedAccess
        in: query
        schema:
          default: false
          type: boolean
      responses:
        "200":
          description: OK
      deprecated: true
    delete:
      operationId: Datasets_deletePrivateUrl
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      deprecated: true
  /datasets/{id}/replaceFiles:
    post:
      tags:
      - replaceFilesInDataset
      summary: Replace a set of files to a dataset
      description: Replace a set of files to a dataset
      operationId: Datasets_replaceFilesInDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        "200":
          description: Files replaced successfully to dataset
  /datasets/{id}/requestGlobusDownload:
    post:
      operationId: Datasets_requestGlobusDownload
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: downloadId
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/requestGlobusUploadPaths:
    post:
      operationId: Datasets_requestGlobusUpload
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/returnToAuthor:
    post:
      operationId: Datasets_returnToAuthor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/submitForReview:
    post:
      operationId: Datasets_submitForReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/thumbnail:
    get:
      operationId: Datasets_getDatasetThumbnail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      tags:
      - uploadDatasetLogo
      summary: Uploads a logo for a dataset
      description: Uploads a logo for a dataset
      operationId: Datasets_uploadDatasetLogo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              format: binary
              type: string
      responses:
        "200":
          description: Dataset logo uploaded successfully
    delete:
      operationId: Datasets_removeDatasetLogo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/thumbnail/candidates:
    get:
      operationId: Datasets_getDatasetThumbnailCandidates
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/thumbnail/{dataFileId}:
    post:
      operationId: Datasets_setDataFileAsThumbnail
      parameters:
      - name: dataFileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/uploadurls:
    get:
      operationId: Datasets_getMPUploadUrls
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /datasets/{id}/userPermissions:
    get:
      operationId: Datasets_getUserPermissionsOnDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions:
    get:
      operationId: Datasets_listVersions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: excludeFiles
        in: query
        schema:
          type: boolean
      - name: excludeMetadataBlocks
        in: query
        schema:
          type: boolean
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId1}/compare/{versionId2}:
    get:
      operationId: Datasets_getCompareVersions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId1
        in: path
        required: true
        schema:
          type: string
      - name: versionId2
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId}:
    get:
      operationId: Datasets_getVersion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: excludeFiles
        in: query
        schema:
          type: boolean
      - name: excludeMetadataBlocks
        in: query
        schema:
          type: boolean
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      - name: returnOwners
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    put:
      operationId: Datasets_updateDraftVersion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_deleteDraftVersion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId}/canDownloadAtLeastOneFile:
    get:
      operationId: Datasets_getCanDownloadAtLeastOneFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId}/citation:
    get:
      operationId: Datasets_getDatasetVersionCitation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId}/customlicense:
    get:
      operationId: Datasets_getCustomTermsTab
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId}/deaccession:
    post:
      operationId: Datasets_deaccessionDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId}/files:
    get:
      operationId: Datasets_getVersionFiles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: accessStatus
        in: query
        schema:
          type: string
      - name: categoryName
        in: query
        schema:
          type: string
      - name: contentType
        in: query
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      - name: orderCriteria
        in: query
        schema:
          type: string
      - name: searchText
        in: query
        schema:
          type: string
      - name: tabularTagName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId}/files/counts:
    get:
      operationId: Datasets_getVersionFileCounts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: accessStatus
        in: query
        schema:
          type: string
      - name: categoryName
        in: query
        schema:
          type: string
      - name: contentType
        in: query
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      - name: searchText
        in: query
        schema:
          type: string
      - name: tabularTagName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId}/linkset:
    get:
      operationId: Datasets_getLinkset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionId}/metadata:
    get:
      operationId: Datasets_getVersionJsonLDMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{versionNumber}/metadata/{block}:
    get:
      operationId: Datasets_getVersionMetadataBlock
      parameters:
      - name: block
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/versions/{version}/toolparams/{tid}:
    get:
      operationId: Datasets_getExternalToolDVParams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: tid
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: version
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{id}/{version}/archivalStatus:
    get:
      operationId: Datasets_getDatasetVersionArchivalStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Datasets_setDatasetVersionArchivalStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Datasets_deleteDatasetVersionArchivalStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datasets/{linkedDatasetId}/link/{linkingDataverseAlias}:
    put:
      operationId: Datasets_linkDataset
      parameters:
      - name: linkedDatasetId
        in: path
        required: true
        schema:
          type: string
      - name: linkingDataverseAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /datatags/receiveTags/{uniqueCacheId}:
    post:
      operationId: DataTagsAPI_receiveTags
      parameters:
      - name: uniqueCacheId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses:
    post:
      operationId: Dataverses_addRoot
      responses:
        "200":
          description: OK
  /dataverses/{identifier}:
    get:
      operationId: Dataverses_getDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: returnOwners
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    put:
      operationId: Dataverses_updateDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Dataverses_addDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Dataverses_deleteDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/actions/:publish:
    post:
      operationId: Dataverses_publishDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/assignments:
    get:
      operationId: Dataverses_listAssignments
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Dataverses_createAssignment
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/assignments/{id}:
    delete:
      operationId: Dataverses_deleteAssignment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/attribute/{attribute}:
    put:
      operationId: Dataverses_updateAttribute
      parameters:
      - name: attribute
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/contents:
    get:
      operationId: Dataverses_listContent
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/datasetSchema:
    get:
      operationId: Dataverses_getDatasetSchema
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/datasets:
    post:
      operationId: Dataverses_createDataset
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: doNotValidate
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/datasets/:import:
    post:
      operationId: Dataverses_importDataset
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: pid
        in: query
        schema:
          type: string
      - name: release
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/datasets/:importddi:
    post:
      operationId: Dataverses_importDatasetDdi
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: pid
        in: query
        schema:
          type: string
      - name: release
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/datasets/:startmigration:
    post:
      operationId: Dataverses_recreateDataset
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/defaultContributorRole/{roleAlias}:
    put:
      operationId: Dataverses_updateDefaultContributorRole
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: roleAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/facets:
    get:
      operationId: Dataverses_listFacets
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: returnDetails
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    post:
      operationId: Dataverses_setFacets
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/featured:
    get:
      operationId: Dataverses_getFeaturedDataverses
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Dataverses_setFeaturedDataverses
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Dataverses_deleteFeaturedCollections
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/groups:
    get:
      operationId: Dataverses_listGroups
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Dataverses_createExplicitGroup
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/groups/{aliasInOwner}:
    get:
      operationId: Dataverses_getGroupByOwnerAndAliasInOwner
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Dataverses_updateGroup
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Dataverses_deleteGroup
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/groups/{aliasInOwner}/roleAssignees:
    post:
      operationId: Dataverses_addRoleAssingees
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/groups/{aliasInOwner}/roleAssignees/{roleAssigneeIdentifier}:
    put:
      operationId: Dataverses_addRoleAssingee
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: roleAssigneeIdentifier
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Dataverses_deleteRoleAssingee
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: roleAssigneeIdentifier
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/guestbookResponses:
    get:
      operationId: Dataverses_getGuestbookResponsesByDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: guestbookId
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/inputLevels:
    get:
      operationId: Dataverses_getInputLevels
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Dataverses_updateInputLevels
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/links:
    get:
      operationId: Dataverses_listLinks
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/metadatablockfacets:
    get:
      operationId: Dataverses_listMetadataBlockFacets
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Dataverses_setMetadataBlockFacets
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/metadatablockfacets/isRoot:
    post:
      operationId: Dataverses_updateMetadataBlockFacetsRoot
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/metadatablocks:
    get:
      operationId: Dataverses_listMetadataBlocks
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: onlyDisplayedOnCreate
        in: query
        schema:
          type: boolean
      - name: returnDatasetFieldTypes
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    post:
      operationId: Dataverses_setMetadataBlocks
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/metadatablocks/:isRoot:
    get:
      operationId: Dataverses_getMetadataRoot_legacy
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Dataverses_setMetadataRoot_legacy
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/metadatablocks/isRoot:
    get:
      operationId: Dataverses_getMetadataRoot
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: Dataverses_setMetadataRoot
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/roles:
    get:
      operationId: Dataverses_listRoles
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Dataverses_createRole
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/storage/quota:
    get:
      operationId: Dataverses_getCollectionQuota
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Dataverses_deleteCollectionQuota
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/storage/quota/{bytesAllocated}:
    post:
      operationId: Dataverses_setCollectionQuota
      parameters:
      - name: bytesAllocated
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/storage/use:
    get:
      operationId: Dataverses_getCollectionStorageUse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/storagesize:
    get:
      operationId: Dataverses_getStorageSize
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: includeCached
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/userPermissions:
    get:
      operationId: Dataverses_getUserPermissionsOnDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{identifier}/validateDatasetJson:
    post:
      operationId: Dataverses_validateDatasetJson
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /dataverses/{id}/move/{targetDataverseAlias}:
    post:
      operationId: Dataverses_moveDataverse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: targetDataverseAlias
        in: path
        required: true
        schema:
          type: string
      - name: forceMove
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /dataverses/{linkedDataverseAlias}/link/{linkingDataverseAlias}:
    put:
      operationId: Dataverses_linkDataverse
      parameters:
      - name: linkedDataverseAlias
        in: path
        required: true
        schema:
          type: string
      - name: linkingDataverseAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /dataverses/{linkingDataverseId}/deleteLink/{linkedDataverseId}:
    delete:
      operationId: Dataverses_deleteDataverseLinkingDataverse
      parameters:
      - name: linkedDataverseId
        in: path
        required: true
        schema:
          type: string
      - name: linkingDataverseId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /edit/{fileId}:
    put:
      operationId: EditDDI_edit
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/xml:
            schema:
              format: binary
              type: string
      responses:
        "200":
          description: OK
  /externalTools:
    get:
      operationId: ExternalToolsApi_getExternalTools
      responses:
        "200":
          description: OK
    post:
      operationId: ExternalToolsApi_addExternalTool
      responses:
        "200":
          description: OK
  /externalTools/{id}:
    get:
      operationId: ExternalToolsApi_getExternalTool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      operationId: ExternalToolsApi_deleteExternalTool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /files/fixityAlgorithm:
    get:
      operationId: Files_getFixityAlgorithm
      responses:
        "200":
          description: OK
  /files/{id}:
    get:
      operationId: Files_getFileData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      - name: returnDatasetVersion
        in: query
        schema:
          type: boolean
      - name: returnOwners
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    delete:
      operationId: Files_deleteFileInDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/dataTables:
    get:
      operationId: Files_getFileDataTables
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/downloadCount:
    get:
      operationId: Files_getFileDownloadCount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/extractNcml:
    post:
      operationId: Files_extractNcml
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/hasBeenDeleted:
    get:
      operationId: Files_getHasBeenDeleted
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/metadata:
    get:
      operationId: Files_getFileMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Files_updateFileMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/metadata/categories:
    post:
      operationId: Files_setFileCategories
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/metadata/draft:
    get:
      operationId: Files_getFileMetadataDraft
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/metadata/tabularTags:
    post:
      operationId: Files_setFileTabularTags
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/metadata/{fmid}/toolparams/{tid}:
    get:
      operationId: Files_getExternalToolFMParams
      parameters:
      - name: fmid
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: tid
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: locale
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/prov-freeform:
    get:
      operationId: Prov_getProvFreeForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Prov_addProvFreeForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /files/{id}/prov-json:
    get:
      operationId: Prov_getProvJson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: Prov_addProvJson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: entityName
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Prov_deleteProvJson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/redetect:
    post:
      operationId: Files_redetectDatafile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: dryRun
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /files/{id}/reingest:
    post:
      operationId: Files_reingest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/replace:
    post:
      tags:
      - replaceFilesInDataset
      summary: Replace a file on a dataset
      description: Replace a file to a dataset
      operationId: Files_replaceFileInDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        "200":
          description: File replaced successfully on the dataset
  /files/{id}/restrict:
    put:
      operationId: Files_restrictFileInDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/uningest:
    post:
      operationId: Files_uningestDatafile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /files/{id}/versions/{datasetVersionId}:
    get:
      operationId: Files_getFileDataForVersion
      parameters:
      - name: datasetVersionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      - name: returnDatasetVersion
        in: query
        schema:
          type: boolean
      - name: returnOwners
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /files/{id}/versions/{dsVersionString}/citation:
    get:
      operationId: Files_getFileCitationByVersion
      parameters:
      - name: dsVersionString
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /harvest/clients:
    get:
      operationId: HarvestingClients_harvestingClients
      parameters:
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /harvest/clients/{nickName}:
    get:
      operationId: HarvestingClients_harvestingClient
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: HarvestingClients_modifyHarvestingClient
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      operationId: HarvestingClients_createHarvestingClient
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: HarvestingClients_deleteHarvestingClient
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /harvest/clients/{nickName}/run:
    post:
      operationId: HarvestingClients_startHarvestingJob
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /harvest/server/oaisets:
    get:
      operationId: HarvestingServer_oaiSets
      parameters:
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /harvest/server/oaisets/add:
    post:
      operationId: HarvestingServer_createOaiSet
      parameters:
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /harvest/server/oaisets/{specname}:
    get:
      operationId: HarvestingServer_oaiSet
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      operationId: HarvestingServer_modifyOaiSet
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: HarvestingServer_deleteOaiSet
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /harvest/server/oaisets/{specname}/datasets:
    get:
      operationId: HarvestingServer_oaiSetListDatasets
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /inbox:
    post:
      operationId: LDNInbox_acceptMessage
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /info/apiTermsOfUse:
    get:
      tags:
      - info
      operationId: Info_getTermsOfUse
      responses:
        "200":
          description: OK
  /info/exportFormats:
    get:
      tags:
      - info
      operationId: Info_getExportFormats
      responses:
        "200":
          description: OK
  /info/metrics/accounts:
    get:
      operationId: Metrics_getAccountsAllTime
      responses:
        "200":
          description: OK
  /info/metrics/accounts/monthly:
    get:
      operationId: Metrics_getAccountsTimeSeries
      responses:
        "200":
          description: OK
  /info/metrics/accounts/pastDays/{days}:
    get:
      operationId: Metrics_getAccountsPastDays
      parameters:
      - name: days
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
  /info/metrics/accounts/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getAccountsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/datasets:
    get:
      operationId: Metrics_getDatasetsAllTime
      parameters:
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/datasets/bySubject:
    get:
      operationId: Metrics_getDatasetsBySubject
      parameters:
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/datasets/bySubject/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getDatasetsBySubjectToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/datasets/monthly:
    get:
      operationId: Metrics_getDatasetsTimeSeriest
      parameters:
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/datasets/pastDays/{days}:
    get:
      operationId: Metrics_getDatasetsPastDays
      parameters:
      - name: days
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/datasets/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getDatasetsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/dataverses:
    get:
      operationId: Metrics_getDataversesAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/dataverses/byCategory:
    get:
      operationId: Metrics_getDataversesByCategory
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/dataverses/bySubject:
    get:
      operationId: Metrics_getDataversesBySubject
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/dataverses/monthly:
    get:
      operationId: Metrics_getDataversesTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/dataverses/pastDays/{days}:
    get:
      operationId: Metrics_getDataversesPastDays
      parameters:
      - name: days
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/dataverses/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getDataversesToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/downloads:
    get:
      operationId: Metrics_getDownloadsAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/downloads/monthly:
    get:
      operationId: Metrics_getDownloadsTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/downloads/pastDays/{days}:
    get:
      operationId: Metrics_getDownloadsPastDays
      parameters:
      - name: days
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/downloads/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getDownloadsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/filedownloads:
    get:
      operationId: Metrics_getFileDownloadsAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/filedownloads/monthly:
    get:
      operationId: Metrics_getFileDownloadsTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/filedownloads/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getFileDownloadsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/files:
    get:
      operationId: Metrics_getFilesAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/files/byType:
    get:
      operationId: Metrics_getFilesByType
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/files/byType/monthly:
    get:
      operationId: Metrics_getFilesByTypeTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/files/monthly:
    get:
      operationId: Metrics_getFilesTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/files/pastDays/{days}:
    get:
      operationId: Metrics_getFilesPastDays
      parameters:
      - name: days
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/files/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getFilesToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/makeDataCount/{metric}:
    get:
      operationId: Metrics_getMakeDataCountMetricCurrentMonth
      parameters:
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/makeDataCount/{metric}/monthly:
    get:
      operationId: Metrics_getMakeDataCountMetricTimeSeries
      parameters:
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/makeDataCount/{metric}/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getMakeDataCountMetricToMonth
      parameters:
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/tree:
    get:
      operationId: Metrics_getDataversesTree
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/tree/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getDataversesTreeToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/uniquedownloads:
    get:
      operationId: Metrics_getUniqueDownloadsAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/uniquedownloads/monthly:
    get:
      operationId: Metrics_getUniqueDownloadsTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/uniquedownloads/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getUniqueDownloadsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/uniquefiledownloads:
    get:
      operationId: Metrics_getUniqueFileDownloadsAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/uniquefiledownloads/monthly:
    get:
      operationId: Metrics_getUniqueFileDownloadsTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/metrics/uniquefiledownloads/toMonth/{yyyymm}:
    get:
      operationId: Metrics_getUniqueFileDownloadsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /info/server:
    get:
      tags:
      - info
      operationId: Info_getServer
      responses:
        "200":
          description: OK
  /info/settings/:DatasetPublishPopupCustomText:
    get:
      tags:
      - info
      operationId: Info_getDatasetPublishPopupCustomText
      responses:
        "200":
          description: OK
  /info/settings/:MaxEmbargoDurationInMonths:
    get:
      tags:
      - info
      operationId: Info_getMaxEmbargoDurationInMonths
      responses:
        "200":
          description: OK
  /info/settings/incompleteMetadataViaApi:
    get:
      tags:
      - info
      operationId: Info_getAllowsIncompleteMetadata
      responses:
        "200":
          description: OK
  /info/version:
    get:
      tags:
      - info
      summary: Get version and build information
      description: Get version and build information
      operationId: Info_getInfo
      responses:
        "200":
          description: Version and build information
  /info/zipDownloadLimit:
    get:
      tags:
      - info
      operationId: Info_getZipDownloadLimit
      responses:
        "200":
          description: OK
  /ingest/test/file:
    get:
      operationId: TestIngest_datafile
      parameters:
      - name: fileName
        in: query
        schema:
          type: string
      - name: fileType
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /licenses:
    get:
      operationId: Licenses_getLicenses
      responses:
        "200":
          description: OK
    post:
      operationId: Licenses_addLicense
      responses:
        "200":
          description: OK
  /licenses/default:
    get:
      operationId: Licenses_getDefault
      responses:
        "200":
          description: OK
  /licenses/default/{id}:
    put:
      operationId: Licenses_setDefault
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /licenses/{id}:
    get:
      operationId: Licenses_getLicenseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      operationId: Licenses_deleteLicenseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /licenses/{id}/:active/{activeState}:
    put:
      operationId: Licenses_setActiveState
      parameters:
      - name: activeState
        in: path
        required: true
        schema:
          type: boolean
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /licenses/{id}/:sortOrder/{sortOrder}:
    put:
      operationId: Licenses_setSortOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: sortOrder
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /logout:
    post:
      operationId: Logout_logout
      responses:
        "200":
          description: OK
  /mail/notifications:
    get:
      operationId: Mail_sendMail
      responses:
        "200":
          description: OK
  /meta/datafile/{fileId}:
    get:
      operationId: Meta_datafile
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: exclude
        in: query
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          format: int64
          type: integer
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/xml:
              schema:
                type: string
      deprecated: true
  /meta/dataset/{datasetId}:
    get:
      operationId: Meta_dataset
      parameters:
      - name: datasetId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: exclude
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: string
      deprecated: true
  /metadatablocks:
    get:
      operationId: MetadataBlocks_listMetadataBlocks
      parameters:
      - name: onlyDisplayedOnCreate
        in: query
        schema:
          type: boolean
      - name: returnDatasetFieldTypes
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /metadatablocks/{identifier}:
    get:
      operationId: MetadataBlocks_getMetadataBlock
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /mydata/retrieve:
    get:
      operationId: DataRetrieverAPI_retrieveMyDataAsJsonString
      parameters:
      - name: dataset_valid
        in: query
        schema:
          type: array
          items:
            type: boolean
      - name: dvobject_types
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/DType'
      - name: filter_validities
        in: query
        schema:
          type: boolean
      - name: mydata_search_term
        in: query
        schema:
          type: string
      - name: published_states
        in: query
        schema:
          type: array
          items:
            type: string
      - name: role_ids
        in: query
        schema:
          type: array
          items:
            format: int64
            type: integer
      - name: selected_page
        in: query
        schema:
          format: int32
          type: integer
      - name: userIdentifier
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /notifications/all:
    get:
      operationId: Notifications_getAllNotificationsForUser
      responses:
        "200":
          description: OK
  /notifications/mutedEmails:
    get:
      operationId: Notifications_getMutedEmailsForUser
      responses:
        "200":
          description: OK
  /notifications/mutedEmails/{typeName}:
    put:
      operationId: Notifications_muteEmailsForUser
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Notifications_unmuteEmailsForUser
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /notifications/mutedNotifications:
    get:
      operationId: Notifications_getMutedNotificationsForUser
      responses:
        "200":
          description: OK
  /notifications/mutedNotifications/{typeName}:
    put:
      operationId: Notifications_muteNotificationsForUser
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Notifications_unmuteNotificationsForUser
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /notifications/{id}:
    delete:
      operationId: Notifications_deleteNotificationForUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /pids:
    get:
      operationId: Pids_getPid
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /pids/providers:
    get:
      operationId: Pids_getPidProviders
      responses:
        "200":
          description: OK
  /pids/providers/{persistentId}:
    get:
      operationId: Pids_getPidProviderId
      parameters:
      - name: persistentId
        in: path
        required: true
        schema:
          pattern: .+
          type: string
      responses:
        "200":
          description: OK
  /pids/unreserved:
    get:
      operationId: Pids_getUnreserved
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /pids/{id}/delete:
    delete:
      operationId: Pids_deletePid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /pids/{id}/reserve:
    post:
      operationId: Pids_reservePid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /roles:
    post:
      operationId: Roles_createNewRole
      parameters:
      - name: dvo
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /roles/{id}:
    get:
      operationId: Roles_viewRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      operationId: Roles_deleteRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /search:
    get:
      operationId: Search_search
      parameters:
      - name: fq
        in: query
        schema:
          type: array
          items:
            type: string
      - name: geo_point
        in: query
        schema:
          type: string
      - name: geo_radius
        in: query
        schema:
          type: string
      - name: metadata_fields
        in: query
        schema:
          type: array
          items:
            type: string
      - name: order
        in: query
        schema:
          type: string
      - name: per_page
        in: query
        schema:
          format: int32
          type: integer
      - name: q
        in: query
        schema:
          type: string
      - name: query_entities
        in: query
        schema:
          type: boolean
      - name: show_api_urls
        in: query
        schema:
          type: boolean
      - name: show_entity_ids
        in: query
        schema:
          type: boolean
      - name: show_facets
        in: query
        schema:
          type: boolean
      - name: show_my_data
        in: query
        schema:
          type: boolean
      - name: show_relevance
        in: query
        schema:
          type: boolean
      - name: show_type_counts
        in: query
        schema:
          type: boolean
      - name: sort
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          format: int32
          type: integer
      - name: subtree
        in: query
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /users/:me:
    get:
      operationId: Users_getAuthenticatedUserByToken
      responses:
        "200":
          description: OK
  /users/register:
    post:
      operationId: Users_registerOIDCUser
      responses:
        "200":
          description: OK
  /users/token:
    get:
      operationId: Users_getTokenExpirationDate
      responses:
        "200":
          description: OK
    delete:
      operationId: Users_deleteToken
      responses:
        "200":
          description: OK
  /users/token/recreate:
    post:
      operationId: Users_recreateToken
      parameters:
      - name: returnExpiration
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /users/{consumedIdentifier}/mergeIntoUser/{baseIdentifier}:
    post:
      operationId: Users_mergeInAuthenticatedUser
      parameters:
      - name: baseIdentifier
        in: path
        required: true
        schema:
          type: string
      - name: consumedIdentifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /users/{identifier}/changeIdentifier/{newIdentifier}:
    post:
      operationId: Users_changeAuthenticatedUserIdentifier
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: newIdentifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /users/{identifier}/removeRoles:
    post:
      operationId: Users_removeUserRoles
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /users/{identifier}/traces:
    get:
      operationId: Users_getTraces
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /users/{identifier}/traces/{element}:
    get:
      operationId: Users_getTracesElement
      parameters:
      - name: element
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /workflows/{invocationId}:
    post:
      operationId: Workflows_resumeWorkflow
      parameters:
      - name: invocationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    AbstractOAuth2AuthenticationProvider:
      type: object
      properties:
        passwordUpdateAllowed:
          type: boolean
        userDeletionAllowed:
          type: boolean
        displayIdentifier:
          type: boolean
        persistentIdName:
          type: string
        persistentIdDescription:
          type: string
        persistentIdUrlPrefix:
          type: string
        logo:
          type: string
        emailVerified:
          type: boolean
        friendlyName:
          type: string
        id:
          type: string
        title:
          type: string
        subTitle:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        baseUserEndpoint:
          type: string
        redirectUrl:
          type: string
        scope:
          type: array
          items:
            type: string
        apiInstance:
          type: object
        userInfoUpdateAllowed:
          type: boolean
        info:
          $ref: '#/components/schemas/AuthenticationProviderDisplayInfo'
        order:
          format: int32
          type: integer
        iconHtml:
          type: string
          nullable: true
        spacedScope:
          type: string
        oAuthProvider:
          type: boolean
    ActionLogServiceBean:
      type: object
      properties:
        em:
          type: object
    Alignment:
      enum:
      - LEFT
      - CENTER
      - RIGHT
      type: string
    AlternativePersistentIdentifier:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dvObject:
          $ref: '#/components/schemas/DvObject'
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime:
          format: date
          type: string
          example: 2022-03-10
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        storageLocationDesignator:
          type: boolean
    AuthenticatedUser:
      required:
      - userIdentifier
      - email
      - lastName
      - firstName
      type: object
      properties:
        id:
          format: int64
          type: integer
        userIdentifier:
          type: string
        email:
          type: string
        affiliation:
          type: string
        position:
          type: string
        lastName:
          pattern: \S
          type: string
        firstName:
          pattern: \S
          type: string
        emailConfirmed:
          type: object
        createdTime:
          type: object
        lastLoginTime:
          type: object
        lastApiUseTime:
          type: object
        cart:
          $ref: '#/components/schemas/Cart'
        superuser:
          type: boolean
        deactivated:
          type: boolean
        deactivatedTime:
          type: object
        mutedEmails:
          type: string
        mutedNotifications:
          type: string
        mutedEmailsSet:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type'
        mutedNotificationsSet:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type'
        rateLimitTier:
          format: int32
          minimum: 1
          type: integer
        shibIdentityProvider:
          type: string
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/UserNotification'
        requests:
          type: array
          items:
            $ref: '#/components/schemas/UserNotification'
        datasetLocks:
          type: array
          items:
            $ref: '#/components/schemas/DatasetLock'
        oAuth2TokenDatas:
          type: array
          items:
            $ref: '#/components/schemas/OAuth2TokenData'
        fileAccessRequests:
          type: array
          items:
            $ref: '#/components/schemas/FileAccessRequest'
        roles:
          type: string
        authProviderId:
          type: string
        authProviderFactoryAlias:
          type: string
        authenticatedUserLookup:
          $ref: '#/components/schemas/AuthenticatedUserLookup'
        identifier:
          type: string
        userNotifications:
          type: array
          items:
            $ref: '#/components/schemas/UserNotification'
        userRequests:
          type: array
          items:
            $ref: '#/components/schemas/UserNotification'
        userRequestss:
          type: array
          items:
            $ref: '#/components/schemas/UserNotification'
        requestedDataFiles:
          type: array
          items:
            $ref: '#/components/schemas/DataFile'
        displayInfo:
          $ref: '#/components/schemas/AuthenticatedUserDisplayInfo'
        authenticated:
          type: boolean
        name:
          type: string
        sortByString:
          type: string
        orcidId:
          type: string
    AuthenticatedUserDisplayInfo:
      type: object
      properties:
        title:
          type: string
        emailAddress:
          type: string
        affiliation:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        position:
          type: string
    AuthenticatedUserLookup:
      type: object
      properties:
        id:
          format: int64
          type: integer
        authenticationProviderId:
          type: string
        persistentUserId:
          type: string
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
    AuthenticationProvider:
      type: object
      properties:
        id:
          type: string
        info:
          $ref: '#/components/schemas/AuthenticationProviderDisplayInfo'
        order:
          format: int32
          type: integer
        passwordUpdateAllowed:
          type: boolean
        userInfoUpdateAllowed:
          type: boolean
        userDeletionAllowed:
          type: boolean
        oAuthProvider:
          type: boolean
        displayIdentifier:
          type: boolean
        persistentIdName:
          type: string
        persistentIdDescription:
          type: string
        persistentIdUrlPrefix:
          type: string
        logo:
          type: string
        emailVerified:
          type: boolean
        friendlyName:
          type: string
    AuthenticationProviderDisplayInfo:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        id:
          type: string
    AuthenticationProviderFactory:
      type: object
      properties:
        alias:
          type: string
        info:
          type: string
    AuthenticationProvidersRegistrationServiceBean:
      type: object
      properties:
        builtinUserServiceBean:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        passwordValidatorService:
          $ref: '#/components/schemas/PasswordValidatorServiceBean'
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        providerFactories:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AuthenticationProviderFactory'
        authenticationProviders:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AuthenticationProvider'
        oAuth2authenticationProviders:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractOAuth2AuthenticationProvider'
        em:
          type: object
        oAuth2AuthProvidersMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractOAuth2AuthenticationProvider'
        authenticationProvidersMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AuthenticationProvider'
        providerFactoriesMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AuthenticationProviderFactory'
    AuthenticationServiceBean:
      type: object
      properties:
        authProvidersRegistrationService:
          $ref: '#/components/schemas/AuthenticationProvidersRegistrationServiceBean'
        builtinUserServiceBean:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        confirmEmailService:
          $ref: '#/components/schemas/ConfirmEmailServiceBean'
        passwordResetServiceBean:
          $ref: '#/components/schemas/PasswordResetServiceBean'
        userService:
          $ref: '#/components/schemas/UserServiceBean'
        passwordValidatorService:
          $ref: '#/components/schemas/PasswordValidatorServiceBean'
        dvObjSvc:
          $ref: '#/components/schemas/DvObjectServiceBean'
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        gbRespSvc:
          $ref: '#/components/schemas/GuestbookResponseServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        explicitGroupService:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        savedSearchService:
          $ref: '#/components/schemas/SavedSearchServiceBean'
        privateUrlService:
          $ref: '#/components/schemas/PrivateUrlServiceBean'
        em:
          type: object
        oAuth2Providers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AbstractOAuth2AuthenticationProvider'
        authenticationProviderIds:
          uniqueItems: true
          type: array
          items:
            type: string
        authenticationProviders:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationProvider'
        orcidEnabled:
          type: boolean
        adminUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        currentTimestamp:
          type: object
        availableOidcProviders:
          type: array
          items:
            $ref: '#/components/schemas/OIDCAuthProvider'
    AuxiliaryFile:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataFile:
          $ref: '#/components/schemas/DataFile'
        formatTag:
          type: string
        formatVersion:
          type: string
        origin:
          type: string
        isPublic:
          type: boolean
        contentType:
          type: string
        fileSize:
          format: int64
          type: integer
        checksum:
          type: string
        type:
          type: string
        typeFriendly:
          type: string
    AuxiliaryFileServiceBean:
      type: object
      properties:
        em:
          type: object
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        storageUseService:
          $ref: '#/components/schemas/StorageUseServiceBean'
    BannerMessage:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dismissibleByUser:
          type: boolean
        active:
          type: boolean
        bannerMessageTexts:
          type: array
          items:
            $ref: '#/components/schemas/BannerMessageText'
        userBannerMessages:
          type: array
          items:
            $ref: '#/components/schemas/UserBannerMessage'
        displayValue:
          type: string
    BannerMessageServiceBean:
      type: object
      properties:
        em:
          type: object
    BannerMessageText:
      type: object
      properties:
        id:
          format: int64
          type: integer
        message:
          type: string
        lang:
          type: string
        bannerMessage:
          $ref: '#/components/schemas/BannerMessage'
    Breadcrumb:
      type: object
      properties:
        breadcrumbText:
          type: string
        dvObject:
          $ref: '#/components/schemas/DvObject'
        url:
          type: string
        optionalUrlExtension:
          type: string
    BuiltinUserServiceBean:
      type: object
      properties:
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        passwordResetService:
          $ref: '#/components/schemas/PasswordResetServiceBean'
        em:
          type: object
    BundleDownloadInstance:
      type: object
      properties:
        downloadInfo:
          $ref: '#/components/schemas/DownloadInfo'
        fileCitationEndNote:
          type: string
        fileCitationRIS:
          type: string
        fileDDIXML:
          type: string
        fileCitationBibtex:
          type: string
    CacheFactoryBean:
      type: object
      properties:
        rateLimitCache:
          type: array
          items:
            type: string
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        manager:
          type: object
        provider:
          type: object
    Cart:
      type: object
      properties:
        contents:
          type: array
          items: {}
    CategoryMetadata:
      type: object
      properties:
        id:
          format: int64
          type: integer
        category:
          $ref: '#/components/schemas/VariableCategory'
        variableMetadata:
          $ref: '#/components/schemas/VariableMetadata'
        wfreq:
          format: double
          type: number
    ChecksumType:
      enum:
      - MD5
      - SHA1
      - SHA256
      - SHA512
      type: string
    ClientHarvestRun:
      type: object
      properties:
        id:
          format: int64
          type: integer
        harvestingClient:
          $ref: '#/components/schemas/HarvestingClient'
        harvestResult:
          $ref: '#/components/schemas/RunResultType'
        startTime:
          format: date
          type: string
          example: 2022-03-10
        finishTime:
          format: date
          type: string
          example: 2022-03-10
        harvestedDatasetCount:
          format: int64
          type: integer
        failedDatasetCount:
          format: int64
          type: integer
        deletedDatasetCount:
          format: int64
          type: integer
        result:
          $ref: '#/components/schemas/RunResultType'
        resultLabel:
          type: string
        detailedResultLabel:
          type: string
        completed:
          type: boolean
        completedWithFailures:
          type: boolean
        failed:
          type: boolean
        inProgress:
          type: boolean
        interrupted:
          type: boolean
    Command:
      type: object
      properties:
        affectedDvObjects:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DvObject'
        request:
          $ref: '#/components/schemas/DataverseRequest'
        requiredPermissions:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/Permission'
    CommandContext:
      type: object
      properties:
        commandsCalled:
          type: array
          items:
            $ref: '#/components/schemas/Command'
    ConfirmEmailServiceBean:
      type: object
      properties:
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        mailService:
          $ref: '#/components/schemas/MailServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        em:
          type: object
    ControlledVocabAlternate:
      type: object
      properties:
        id:
          format: int64
          type: integer
        strValue:
          type: string
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        controlledVocabularyValue:
          $ref: '#/components/schemas/ControlledVocabularyValue'
    ControlledVocabularyValue:
      type: object
      properties:
        id:
          format: int64
          type: integer
        strValue:
          type: string
        identifier:
          type: string
        displayOrder:
          format: int32
          type: integer
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        controlledVocabAlternates:
          type: array
          items:
            $ref: '#/components/schemas/ControlledVocabAlternate'
        localeStrValue:
          type: string
    CustomQuestion:
      required:
      - questionString
      type: object
      properties:
        id:
          format: int64
          type: integer
        guestbook:
          $ref: '#/components/schemas/Guestbook'
        customQuestionResponses:
          type: array
          items:
            $ref: '#/components/schemas/CustomQuestionResponse'
        customQuestionValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomQuestionValue'
        questionType:
          type: string
        questionString:
          pattern: \S
          type: string
        required:
          type: boolean
        hidden:
          type: boolean
        displayOrder:
          format: int32
          type: integer
        customQuestionValueString:
          type: string
    CustomQuestionResponse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        guestbookResponse:
          $ref: '#/components/schemas/GuestbookResponse'
        customQuestion:
          $ref: '#/components/schemas/CustomQuestion'
        response:
          type: string
        responseSelectItems:
          type: array
          items: {}
    CustomQuestionValue:
      type: object
      properties:
        id:
          format: int64
          type: integer
        valueString:
          type: string
        displayOrder:
          format: int32
          type: integer
        customQuestion:
          $ref: '#/components/schemas/CustomQuestion'
    DType:
      enum:
      - Dataverse
      - Dataset
      - DataFile
      type: string
    DataAccessRequest:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/DataFile'
        requestParameters:
          type: object
          additionalProperties:
            type: string
    DataCaptureModuleServiceBean:
      type: object
    DataFile:
      required:
      - contentType
      type: object
      properties:
        mergeable:
          type: boolean
        id:
          format: int64
          type: integer
        publicationDate:
          type: object
        releaseUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        createDate:
          type: object
        modificationTime:
          type: object
        indexTime:
          type: object
        permissionModificationTime:
          type: object
        permissionIndexTime:
          type: object
        storageIdentifier:
          type: string
        dtype:
          type: string
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime:
          format: date
          type: string
          example: 2022-03-10
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        alternativePersistentIndentifiers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AlternativePersistentIdentifier'
        previewImageAvailable:
          type: boolean
        storageQuota:
          $ref: '#/components/schemas/StorageQuota'
        previewImageFail:
          type: boolean
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        roleAssignments:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
        released:
          type: boolean
        instanceofDataverse:
          type: boolean
        instanceofDataset:
          type: boolean
        instanceofDataFile:
          type: boolean
        dataverseContext:
          $ref: '#/components/schemas/Dataverse'
        authorString:
          type: string
        yearPublishedCreated:
          type: string
        contentType:
          pattern: ^.*/.*$
          type: string
        checksumType:
          $ref: '#/components/schemas/ChecksumType'
        checksumValue:
          type: string
        rootDataFileId:
          format: int64
          type: integer
        previousDataFileId:
          format: int64
          type: integer
        filesize:
          format: int64
          type: integer
        restricted:
          type: boolean
        provEntityName:
          type: string
        dataTables:
          type: array
          items:
            $ref: '#/components/schemas/DataTable'
        auxiliaryFiles:
          type: array
          items:
            $ref: '#/components/schemas/AuxiliaryFile'
        ingestReports:
          type: array
          items:
            $ref: '#/components/schemas/IngestReport'
        ingestRequest:
          $ref: '#/components/schemas/IngestRequest'
        dataFileTags:
          type: array
          items:
            $ref: '#/components/schemas/DataFileTag'
        fileMetadatas:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        guestbookResponses:
          type: array
          items:
            $ref: '#/components/schemas/GuestbookResponse'
        fileAccessRequests:
          type: array
          items:
            $ref: '#/components/schemas/FileAccessRequest'
        fileAccessRequesters:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticatedUser'
        ingestStatus:
          format: byte
          type: string
        thumbnailForDataset:
          $ref: '#/components/schemas/Dataset'
        embargo:
          $ref: '#/components/schemas/Embargo'
        retention:
          $ref: '#/components/schemas/Retention'
        deleted:
          type: boolean
        markedAsDuplicate:
          type: boolean
        duplicateFilename:
          type: string
        effectivelyPermissionRoot:
          type: boolean
        dataTable:
          $ref: '#/components/schemas/DataTable'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/DataFileTag'
        tagLabels:
          type: array
          items:
            type: string
        tagLabelsAsJsonArrayBuilder:
          type: object
        ingestReport:
          $ref: '#/components/schemas/IngestReport'
        ingestReportMessage:
          type: string
        tabularData:
          type: boolean
        originalFileFormat:
          type: string
        originalFileSize:
          format: int64
          type: integer
        originalFileName:
          type: string
        derivedOriginalFileName:
          type: string
        originalFormatLabel:
          type: string
        friendlyType:
          type: string
        owner:
          $ref: '#/components/schemas/Dataset'
        description:
          type: string
        draftFileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        fileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        latestFileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        latestPublishedFileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        friendlySize:
          type: string
        originalChecksumType:
          type: string
        storageIO:
          $ref: '#/components/schemas/StorageIODataFile'
        shapefileType:
          type: boolean
        image:
          type: boolean
        filePackage:
          type: boolean
        ingestScheduled:
          type: boolean
        ingestInProgress:
          type: boolean
        ingestProblem:
          type: boolean
        asThumbnailForDataset:
          $ref: '#/components/schemas/Dataset'
        unf:
          type: string
        harvested:
          type: boolean
        remoteArchiveURL:
          type: string
        harvestingDescription:
          type: string
        displayName:
          type: string
        directoryLabel:
          type: string
        currentName:
          type: string
        publicationDateFormattedYYYYMMDD:
          type: string
        createDateFormattedYYYYMMDD:
          type: string
        targetUrl:
          type: string
        deaccessioned:
          type: boolean
    DataFileCategory:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataset:
          $ref: '#/components/schemas/Dataset'
        name:
          type: string
        fileMetadatas:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
    DataFileServiceBean:
      type: object
      properties:
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        userService:
          $ref: '#/components/schemas/UserServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        ingestService:
          $ref: '#/components/schemas/IngestServiceBean'
        embargoService:
          $ref: '#/components/schemas/EmbargoServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        storageUseService:
          $ref: '#/components/schemas/StorageUseServiceBean'
        em:
          type: object
    DataFileTag:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataFile:
          $ref: '#/components/schemas/DataFile'
        type:
          $ref: '#/components/schemas/TagType'
        typeByLabel:
          type: string
        typeLabel:
          type: string
        geospatialTag:
          type: boolean
    DataTable:
      type: object
      properties:
        id:
          format: int64
          type: integer
        unf:
          type: string
        caseQuantity:
          format: int64
          type: integer
        varQuantity:
          format: int64
          type: integer
        recordsPerCase:
          format: int64
          type: integer
        dataFile:
          $ref: '#/components/schemas/DataFile'
        dataVariables:
          type: array
          items:
            $ref: '#/components/schemas/DataVariable'
        originalFileFormat:
          type: string
        originalFormatVersion:
          type: string
        originalFileSize:
          format: int64
          type: integer
        originalFileName:
          type: string
        storedWithVariableHeader:
          type: boolean
    DataVariable:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataTable:
          $ref: '#/components/schemas/DataTable'
        name:
          type: string
        label:
          type: string
        weighted:
          type: boolean
        fileStartPosition:
          format: int64
          type: integer
        fileEndPosition:
          format: int64
          type: integer
        interval:
          $ref: '#/components/schemas/VariableInterval'
        type:
          $ref: '#/components/schemas/VariableType'
        format:
          type: string
        formatCategory:
          type: string
        recordSegmentNumber:
          format: int64
          type: integer
        invalidRanges:
          type: array
          items:
            $ref: '#/components/schemas/VariableRange'
        invalidRangeItems:
          type: array
          items:
            $ref: '#/components/schemas/VariableRangeItem'
        summaryStatistics:
          type: array
          items:
            $ref: '#/components/schemas/SummaryStatistic'
        unf:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/VariableCategory'
        orderedFactor:
          type: boolean
        factor:
          type: boolean
        fileOrder:
          format: int32
          type: integer
        numberOfDecimalPoints:
          format: int64
          type: integer
        variableMetadatas:
          type: array
          items:
            $ref: '#/components/schemas/VariableMetadata'
        intervalLabel:
          type: string
        intervalDiscrete:
          type: boolean
        intervalContinuous:
          type: boolean
        intervalNominal:
          type: boolean
        intervalDichotomous:
          type: boolean
        typeNumeric:
          type: boolean
        typeCharacter:
          type: boolean
        categorical:
          type: boolean
        orderedCategorical:
          type: boolean
    Dataset:
      type: object
      properties:
        mergeable:
          type: boolean
        id:
          format: int64
          type: integer
        publicationDate:
          type: object
        releaseUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        createDate:
          type: object
        modificationTime:
          type: object
        indexTime:
          type: object
        permissionModificationTime:
          type: object
        permissionIndexTime:
          type: object
        storageIdentifier:
          type: string
        dtype:
          type: string
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime:
          format: date
          type: string
          example: 2022-03-10
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        alternativePersistentIndentifiers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AlternativePersistentIdentifier'
        previewImageAvailable:
          type: boolean
        storageQuota:
          $ref: '#/components/schemas/StorageQuota'
        previewImageFail:
          type: boolean
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        roleAssignments:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
        released:
          type: boolean
        instanceofDataverse:
          type: boolean
        instanceofDataset:
          type: boolean
        instanceofDataFile:
          type: boolean
        dataverseContext:
          $ref: '#/components/schemas/Dataverse'
        authorString:
          type: string
        yearPublishedCreated:
          type: string
        storageDriver:
          type: string
        metadataLanguage:
          type: string
        guestbookAtRequest:
          type: boolean
        pidGeneratorSpecs:
          type: string
        pidGenerator:
          $ref: '#/components/schemas/PidProvider'
        storageUse:
          $ref: '#/components/schemas/StorageUse'
        externalLabelSetName:
          type: string
        owner:
          $ref: '#/components/schemas/Dataverse'
        effectivelyPermissionRoot:
          type: boolean
        effectiveStorageDriverId:
          type: string
        storageDriverId:
          type: string
        effectiveMetadataLanguage:
          type: string
        effectiveGuestbookEntryAtRequest:
          type: boolean
        guestbookEntryAtRequest:
          type: string
        effectiveCurationLabelSetName:
          type: string
        curationLabelSetName:
          type: string
        pidGeneratorId:
          type: string
        effectivePidGenerator:
          $ref: '#/components/schemas/PidProvider'
        files:
          type: array
          items:
            $ref: '#/components/schemas/DataFile'
        lastExportTime:
          format: date
          type: string
          example: 2022-03-10
        versions:
          type: array
          items:
            $ref: '#/components/schemas/DatasetVersion'
        datasetLocks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DatasetLock'
        thumbnailFile:
          $ref: '#/components/schemas/DataFile'
        datasetMetrics:
          type: array
          items:
            $ref: '#/components/schemas/DatasetMetrics'
        datasetExternalCitations:
          type: array
          items:
            $ref: '#/components/schemas/DatasetExternalCitations'
        useGenericThumbnail:
          type: boolean
        datasetType:
          $ref: '#/components/schemas/DatasetType'
        guestbook:
          $ref: '#/components/schemas/Guestbook'
        datasetLinkingDataverses:
          type: array
          items:
            $ref: '#/components/schemas/DatasetLinkingDataverse'
        fileAccessRequest:
          type: boolean
        dataFileCategories:
          type: array
          items:
            $ref: '#/components/schemas/DataFileCategory'
        citationDateDatasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        embargoCitationDate:
          type: object
        template:
          $ref: '#/components/schemas/Template'
        harvestedFrom:
          $ref: '#/components/schemas/HarvestingClient'
        harvestIdentifier:
          type: string
        locks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DatasetLock'
        locked:
          type: boolean
        persistentURL:
          type: string
        deaccessioned:
          type: boolean
        latestVersion:
          $ref: '#/components/schemas/DatasetVersion'
        latestVersionForCopy:
          $ref: '#/components/schemas/DatasetVersion'
        orCreateEditVersion:
          $ref: '#/components/schemas/DatasetVersion'
        mostRecentMajorVersionReleaseDate:
          format: date
          type: string
          example: 2022-03-10
        releasedVersion:
          $ref: '#/components/schemas/DatasetVersion'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/DataFileCategory'
        fileCategories:
          type: array
          items:
            $ref: '#/components/schemas/DataFileCategory'
        categoriesByName:
          type: array
          items:
            type: string
        categoryNames:
          type: array
          items:
            type: string
        fileSystemDirectory:
          type: array
          deprecated: true
        alternativePersistentIdentifier:
          type: string
        protocolForFileStorage:
          type: string
        authorityForFileStorage:
          type: string
        identifierForFileStorage:
          type: string
        nextMajorVersionString:
          type: string
        nextMinorVersionString:
          type: string
        versionNumber:
          format: int32
          type: integer
        minorVersionNumber:
          format: int32
          type: integer
        citation:
          type: string
        publicationDateFormattedYYYYMMDD:
          type: string
        citationDate:
          type: object
        citationDateFormattedYYYYMMDD:
          type: string
        harvested:
          type: boolean
        localURL:
          type: string
        remoteArchiveURL:
          type: string
        harvestingDescription:
          type: string
        displayName:
          type: string
        currentName:
          type: string
        permissionRoot:
          type: boolean
        targetUrl:
          type: string
    DatasetAuthor:
      type: object
      properties:
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        name:
          $ref: '#/components/schemas/DatasetField'
        displayOrder:
          format: int32
          type: integer
        affiliation:
          $ref: '#/components/schemas/DatasetField'
        idType:
          type: string
        idValue:
          type: string
        empty:
          type: boolean
        identifierAsUrl:
          type: string
    DatasetDistributor:
      type: object
      properties:
        displayOrder:
          format: int32
          type: integer
        name:
          $ref: '#/components/schemas/DatasetField'
        version:
          format: int64
          type: integer
        url:
          $ref: '#/components/schemas/DatasetField'
        logo:
          $ref: '#/components/schemas/DatasetField'
        affiliation:
          $ref: '#/components/schemas/DatasetField'
        abbreviation:
          $ref: '#/components/schemas/DatasetField'
        empty:
          type: boolean
    DatasetExternalCitations:
      required:
      - dataset
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataset:
          $ref: '#/components/schemas/Dataset'
        citedByUrl:
          type: string
    DatasetField:
      type: object
      properties:
        id:
          format: int64
          type: integer
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        template:
          $ref: '#/components/schemas/Template'
        parentDatasetFieldCompoundValue:
          $ref: '#/components/schemas/DatasetFieldCompoundValue'
        datasetFieldCompoundValues:
          type: array
          items:
            $ref: '#/components/schemas/DatasetFieldCompoundValue'
        datasetFieldValues:
          type: array
          items:
            $ref: '#/components/schemas/DatasetFieldValue'
        controlledVocabularyValues:
          type: array
          items:
            $ref: '#/components/schemas/ControlledVocabularyValue'
        validationMessage:
          type: string
        required:
          type: boolean
        hasRequiredChildren:
          type: boolean
        include:
          type: boolean
        singleValue:
          $ref: '#/components/schemas/DatasetFieldValue'
        singleControlledVocabularyValue:
          $ref: '#/components/schemas/ControlledVocabularyValue'
        value:
          type: string
        displayValue:
          type: string
        rawValue:
          type: string
        compoundDisplayValue:
          type: string
        compoundRawValue:
          type: string
        values:
          type: array
          items:
            type: string
        rawValuesList:
          type: array
          items:
            type: string
        values_nondisplay:
          type: array
          items:
            type: string
        valuesWithoutNaValues:
          type: array
          items:
            type: string
        empty:
          type: boolean
        emptyForDisplay:
          type: boolean
        dataverse:
          $ref: '#/components/schemas/Dataverse'
    DatasetFieldCompoundValue:
      type: object
      properties:
        id:
          format: int64
          type: integer
        displayOrder:
          format: int32
          type: integer
        parentDatasetField:
          $ref: '#/components/schemas/DatasetField'
        childDatasetFields:
          type: array
          items:
            $ref: '#/components/schemas/DatasetField'
        linkMap:
          type: object
          additionalProperties:
            type: boolean
        linkScheme:
          type: string
        linkValue:
          type: string
        displayValueMap:
          type: object
          additionalProperties:
            type: string
        link:
          type: string
        linkableField:
          type: boolean
        linkComponents:
          type: object
    DatasetFieldDefaultValue:
      type: object
      properties:
        id:
          format: int64
          type: integer
        datasetField:
          $ref: '#/components/schemas/DatasetFieldType'
        defaultValueSet:
          $ref: '#/components/schemas/DefaultValueSet'
        childDatasetFieldDefaultValues:
          type: array
          items:
            $ref: '#/components/schemas/DatasetFieldDefaultValue'
        parentDatasetFieldDefaultValue:
          $ref: '#/components/schemas/DatasetFieldDefaultValue'
        strValue:
          type: string
        displayOrder:
          format: int32
          type: integer
        parentDatasetFieldValue:
          $ref: '#/components/schemas/DatasetFieldDefaultValue'
        empty:
          type: boolean
    DatasetFieldServiceBean:
      type: object
      properties:
        em:
          type: object
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        cvocMap:
          type: object
          additionalProperties: {}
        cvocMapByTermUri:
          type: object
          additionalProperties: {}
        cvocFieldSet:
          uniqueItems: true
          type: array
          items:
            format: int64
            type: integer
        oldHash:
          type: string
    DatasetFieldType:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        title:
          type: string
        description:
          type: string
        fieldType:
          $ref: '#/components/schemas/FieldType'
        allowControlledVocabulary:
          type: boolean
        watermark:
          type: string
        validationFormat:
          type: string
        dataverseFacets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DataverseFacet'
        dataverseFieldTypeInputLevels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DataverseFieldTypeInputLevel'
        searchValue:
          type: string
        listValues:
          type: array
          items:
            type: string
        controlledVocabularyValuesByStrValue:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ControlledVocabularyValue'
        requiredDV:
          type: boolean
        include:
          type: boolean
        optionSelectItems:
          type: array
          items: {}
        displayOrder:
          format: int32
          type: integer
        displayFormat:
          type: string
        allowMultiples:
          type: boolean
        facetable:
          type: boolean
        displayOnCreate:
          type: boolean
        metadataBlock:
          $ref: '#/components/schemas/MetadataBlock'
        uri:
          type: string
        controlledVocabularyValues:
          type: array
          items:
            $ref: '#/components/schemas/ControlledVocabularyValue'
        childDatasetFieldTypes:
          type: array
          items:
            $ref: '#/components/schemas/DatasetFieldType'
        parentDatasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        required:
          type: boolean
        advancedSearchFieldType:
          type: boolean
        datasetFields:
          type: array
          items:
            $ref: '#/components/schemas/DatasetField'
        datasetFieldDefaultValues:
          type: array
          items:
            $ref: '#/components/schemas/DatasetFieldDefaultValue'
        sanitizeHtml:
          type: boolean
        escapeOutputText:
          type: boolean
        controlledVocabulary:
          type: boolean
        jsonLDTerm:
          $ref: '#/components/schemas/JsonLDTerm'
        primitive:
          type: boolean
        compound:
          type: boolean
        child:
          type: boolean
        subField:
          type: boolean
        hasChildren:
          type: boolean
        hasRequiredChildren:
          type: boolean
        hasParent:
          type: boolean
        displayName:
          type: string
        solrField:
          $ref: '#/components/schemas/SolrField'
        localeTitle:
          type: string
        localeDescription:
          type: string
        localeWatermark:
          type: string
        tmpNullFieldTypeIdentifier:
          type: string
    DatasetFieldValue:
      type: object
      properties:
        id:
          format: int64
          type: integer
        value:
          type: string
        displayOrder:
          format: int32
          type: integer
        datasetField:
          $ref: '#/components/schemas/DatasetField'
        validationMessage:
          type: string
        valueForEdit:
          type: string
        displayValue:
          type: string
        unsanitizedDisplayValue:
          type: string
    DatasetLinkingDataverse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataset:
          $ref: '#/components/schemas/Dataset'
        linkingDataverse:
          $ref: '#/components/schemas/Dataverse'
        linkCreateTime:
          format: date
          type: string
          example: 2022-03-10
    DatasetLinkingServiceBean:
      type: object
      properties:
        em:
          type: object
    DatasetLock:
      type: object
      properties:
        id:
          format: int64
          type: integer
        startTime:
          format: date
          type: string
          example: 2022-03-10
        dataset:
          $ref: '#/components/schemas/Dataset'
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
        reason:
          $ref: '#/components/schemas/Reason'
        info:
          type: string
    DatasetMetrics:
      required:
      - dataset
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataset:
          $ref: '#/components/schemas/Dataset'
        monthYear:
          type: string
        viewsTotalRegular:
          format: int64
          type: integer
        viewsUniqueRegular:
          format: int64
          type: integer
        viewsTotalMachine:
          format: int64
          type: integer
        viewsUniqueMachine:
          format: int64
          type: integer
        downloadsTotalRegular:
          format: int64
          type: integer
        downloadsUniqueRegular:
          format: int64
          type: integer
        downloadsTotalMachine:
          format: int64
          type: integer
        downloadsUniqueMachine:
          format: int64
          type: integer
        countryCode:
          type: string
        viewsUnique:
          format: int64
          type: integer
        viewsTotal:
          format: int64
          type: integer
        downloadsUnique:
          format: int64
          type: integer
        downloadsTotal:
          format: int64
          type: integer
        month:
          type: string
    DatasetRelPublication:
      type: object
      properties:
        text:
          type: string
        idType:
          type: string
        idNumber:
          type: string
        url:
          type: string
        title:
          type: string
        description:
          type: string
        replicationData:
          type: boolean
        displayOrder:
          format: int32
          type: integer
        relationType:
          type: string
        empty:
          type: boolean
    DatasetServiceBean:
      type: object
      properties:
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        versionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        authentication:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        fileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        recordService:
          $ref: '#/components/schemas/OAIRecordServiceBean'
        commandEngine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        globusServiceBean:
          $ref: '#/components/schemas/GlobusServiceBean'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        em:
          type: object
    DatasetType:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
    DatasetTypeServiceBean:
      type: object
      properties:
        em:
          type: object
    DatasetVersion:
      type: object
      properties:
        id:
          format: int64
          type: integer
        UNF:
          type: string
        version:
          format: int64
          type: integer
        versionNumber:
          format: int64
          type: integer
        minorVersionNumber:
          format: int64
          type: integer
        versionNote:
          maxLength: 1000
          minLength: 0
          type: string
        versionState:
          $ref: '#/components/schemas/VersionState'
        dataset:
          $ref: '#/components/schemas/Dataset'
        fileMetadatas:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        termsOfUseAndAccess:
          $ref: '#/components/schemas/TermsOfUseAndAccess'
        datasetFields:
          type: array
          items:
            $ref: '#/components/schemas/DatasetField'
        createTime:
          format: date
          type: string
          example: 2022-03-10
        lastUpdateTime:
          format: date
          type: string
          example: 2022-03-10
        releaseTime:
          format: date
          type: string
          example: 2022-03-10
        archiveTime:
          format: date
          type: string
          example: 2022-03-10
        archiveNote:
          maxLength: 1000
          minLength: 0
          type: string
        archivalCopyLocation:
          type: string
        deaccessionLink:
          type: string
        contributorNames:
          type: string
        dataverseSiteUrl:
          type: string
        jsonLd:
          type: string
        datasetVersionUsers:
          type: array
          items:
            $ref: '#/components/schemas/DatasetVersionUser'
        workflowComments:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowComment'
        externalStatusLabel:
          type: string
        dvd:
          $ref: '#/components/schemas/DatasetVersionDifference'
        archivalStatus:
          type: object
        uNF:
          type: string
        fileMetadatasSorted:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        fileMetadatasSortedByLabelAndFolder:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        inReview:
          type: boolean
        archivalCopyLocationStatus:
          type: string
        archivalCopyLocationMessage:
          type: string
        deaccessionLinkAsGlobalId:
          $ref: '#/components/schemas/GlobalId'
        versionDate:
          type: string
        versionYear:
          type: string
        userDatasets:
          type: array
          items:
            $ref: '#/components/schemas/DatasetVersionUser'
        versionContributorIdentifiers:
          type: array
          items:
            type: string
        defaultVersionDifference:
          $ref: '#/components/schemas/DatasetVersionDifference'
        priorVersionState:
          $ref: '#/components/schemas/VersionState'
        friendlyVersionNumber:
          type: string
        released:
          type: boolean
        published:
          type: boolean
        draft:
          type: boolean
        workingCopy:
          type: boolean
        archived:
          type: boolean
        deaccessioned:
          type: boolean
        retiredCopy:
          type: boolean
        minorUpdate:
          type: boolean
        hasPackageFile:
          type: boolean
        hasNonPackageFile:
          type: boolean
        hasRestrictedFile:
          type: boolean
        mostRecentlyReleasedVersion:
          $ref: '#/components/schemas/DatasetVersion'
        largestMinorRelease:
          $ref: '#/components/schemas/DatasetVersion'
        latestVersion:
          type: boolean
        title:
          type: string
        productionDate:
          type: string
        description:
          type: string
        descriptions:
          type: array
          items:
            type: string
        descriptionPlainText:
          type: string
        descriptionsPlainTextTruncated:
          type: string
        descriptionHtmlEscaped:
          type: string
        datasetContacts:
          type: array
          items: {}
        datasetProducers:
          type: array
          items: {}
        datasetAuthors:
          type: array
          items:
            $ref: '#/components/schemas/DatasetAuthor'
        funders:
          type: array
          items:
            type: string
        timePeriodsCovered:
          type: array
          items:
            type: string
        datesOfCollection:
          type: array
          items:
            type: string
        datasetAuthorNames:
          type: array
          items:
            type: string
        datasetSubjects:
          type: array
          items:
            type: string
        topicClassifications:
          type: array
          items:
            type: string
        kindOfData:
          type: array
          items:
            type: string
        languages:
          type: array
          items:
            type: string
        spatialCoverages:
          type: array
          items:
            type: string
        keywords:
          type: array
          items:
            type: string
        relatedMaterial:
          type: array
          items:
            type: string
        dataSource:
          type: array
          items:
            type: string
        geographicCoverage:
          type: array
          items: {}
        relatedPublications:
          type: array
          items:
            $ref: '#/components/schemas/DatasetRelPublication'
        uniqueGrantAgencyValues:
          type: array
          items:
            type: string
        seriesTitles:
          type: array
          items:
            type: string
        datasetProducerNames:
          type: array
          items:
            type: string
        citation:
          type: string
        citationDate:
          format: date
          type: string
          example: 2022-03-10
        distributionDate:
          type: string
        distributorName:
          type: string
        datasetDistributors:
          type: array
          items:
            $ref: '#/components/schemas/DatasetDistributor'
        distributorNames:
          type: string
        authorsStr:
          type: string
        flatDatasetFields:
          type: array
          items:
            $ref: '#/components/schemas/DatasetField'
        semanticVersion:
          type: string
        valid:
          type: boolean
        publicationDateAsString:
          type: string
        localeLastUpdateTime:
          type: string
    DatasetVersionDifference:
      type: object
      properties:
        newVersion:
          $ref: '#/components/schemas/DatasetVersion'
        originalVersion:
          $ref: '#/components/schemas/DatasetVersion'
        detailDataByBlock:
          type: array
          items:
            type: array
            items:
              type: object
              properties:
                id:
                  format: int64
                  type: integer
                datasetFieldType:
                  $ref: '#/components/schemas/DatasetFieldType'
                datasetVersion:
                  $ref: '#/components/schemas/DatasetVersion'
                template:
                  $ref: '#/components/schemas/Template'
                parentDatasetFieldCompoundValue:
                  $ref: '#/components/schemas/DatasetFieldCompoundValue'
                datasetFieldCompoundValues:
                  type: array
                  items:
                    $ref: '#/components/schemas/DatasetFieldCompoundValue'
                datasetFieldValues:
                  type: array
                  items:
                    $ref: '#/components/schemas/DatasetFieldValue'
                controlledVocabularyValues:
                  type: array
                  items:
                    $ref: '#/components/schemas/ControlledVocabularyValue'
                validationMessage:
                  type: string
                required:
                  type: boolean
                hasRequiredChildren:
                  type: boolean
                include:
                  type: boolean
                singleValue:
                  $ref: '#/components/schemas/DatasetFieldValue'
                singleControlledVocabularyValue:
                  $ref: '#/components/schemas/ControlledVocabularyValue'
                value:
                  type: string
                displayValue:
                  type: string
                rawValue:
                  type: string
                compoundDisplayValue:
                  type: string
                compoundRawValue:
                  type: string
                values:
                  type: array
                  items:
                    type: string
                rawValuesList:
                  type: array
                  items:
                    type: string
                values_nondisplay:
                  type: array
                  items:
                    type: string
                valuesWithoutNaValues:
                  type: array
                  items:
                    type: string
                empty:
                  type: boolean
                emptyForDisplay:
                  type: boolean
                dataverse:
                  $ref: '#/components/schemas/Dataverse'
        datasetFilesDiffList:
          type: array
          items:
            $ref: '#/components/schemas/datasetFileDifferenceItem'
        datasetFilesReplacementList:
          type: array
          items:
            $ref: '#/components/schemas/datasetReplaceFileItem'
        addedFiles:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        removedFiles:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        changedFileMetadata:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        changedFileMetadataDiff:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: array
              items:
                type: string
        changedVariableMetadata:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        replacedFiles:
          type: array
          items:
            description: Cyclic reference to edu.harvard.iq.dataverse.FileMetadata
            type: object
        changedTermsAccess:
          type: array
          items: {}
        summaryDataForNote:
          type: array
          items: {}
        blockDataForNote:
          type: array
          items: {}
        differenceSummaryGroups:
          type: array
          items:
            $ref: '#/components/schemas/DifferenceSummaryGroup'
        fileNote:
          type: string
        editSummaryForLog:
          type: string
    DatasetVersionFilesServiceBean:
      type: object
      properties:
        em:
          type: object
    DatasetVersionServiceBean:
      type: object
      properties:
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        datafileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        authService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        em:
          type: object
        unarchivedDatasetVersions:
          type: array
          items:
            $ref: '#/components/schemas/DatasetVersion'
    DatasetVersionUser:
      type: object
      properties:
        id:
          format: int64
          type: integer
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        lastUpdateDate:
          type: object
    Dataverse:
      required:
      - dataverseType
      type: object
      properties:
        mergeable:
          type: boolean
        id:
          format: int64
          type: integer
        publicationDate:
          type: object
        releaseUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        createDate:
          type: object
        modificationTime:
          type: object
        indexTime:
          type: object
        permissionModificationTime:
          type: object
        permissionIndexTime:
          type: object
        storageIdentifier:
          type: string
        dtype:
          type: string
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime:
          format: date
          type: string
          example: 2022-03-10
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        alternativePersistentIndentifiers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AlternativePersistentIdentifier'
        previewImageAvailable:
          type: boolean
        storageQuota:
          $ref: '#/components/schemas/StorageQuota'
        previewImageFail:
          type: boolean
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        roleAssignments:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
        released:
          type: boolean
        instanceofDataverse:
          type: boolean
        instanceofDataset:
          type: boolean
        instanceofDataFile:
          type: boolean
        dataverseContext:
          $ref: '#/components/schemas/Dataverse'
        authorString:
          type: string
        targetUrl:
          type: string
        yearPublishedCreated:
          type: string
        storageDriver:
          type: string
        metadataLanguage:
          type: string
        guestbookAtRequest:
          type: boolean
        pidGeneratorSpecs:
          type: string
        pidGenerator:
          $ref: '#/components/schemas/PidProvider'
        storageUse:
          $ref: '#/components/schemas/StorageUse'
        externalLabelSetName:
          type: string
        owner:
          $ref: '#/components/schemas/Dataverse'
        effectivelyPermissionRoot:
          type: boolean
        effectiveStorageDriverId:
          type: string
        storageDriverId:
          type: string
        effectiveMetadataLanguage:
          type: string
        effectiveGuestbookEntryAtRequest:
          type: boolean
        guestbookEntryAtRequest:
          type: string
        effectiveCurationLabelSetName:
          type: string
        curationLabelSetName:
          type: string
        pidGeneratorId:
          type: string
        effectivePidGenerator:
          $ref: '#/components/schemas/PidProvider'
        name:
          type: string
        alias:
          maxLength: 60
          type: string
        description:
          type: string
        dataverseType:
          $ref: '#/components/schemas/DataverseType'
        permissionRoot:
          type: boolean
        affiliation:
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DataverseRole'
        defaultContributorRole:
          $ref: '#/components/schemas/DataverseRole'
        metadataBlockRoot:
          type: boolean
        facetRoot:
          type: boolean
        themeRoot:
          type: boolean
        templateRoot:
          type: boolean
        dataverseTheme:
          $ref: '#/components/schemas/DataverseTheme'
        dataverseContacts:
          type: array
          items:
            $ref: '#/components/schemas/DataverseContact'
        metadataBlocks:
          type: array
          items:
            $ref: '#/components/schemas/MetadataBlock'
        dataverseFacets:
          type: array
          items:
            $ref: '#/components/schemas/DataverseFacet'
        citationDatasetFieldTypes:
          type: array
          items:
            $ref: '#/components/schemas/DatasetFieldType'
        dataverseSubjects:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ControlledVocabularyValue'
        dataverseFeaturedDataverses:
          type: array
          items:
            $ref: '#/components/schemas/DataverseFeaturedDataverse'
        dataverseFeaturingDataverses:
          type: array
          items:
            $ref: '#/components/schemas/DataverseFeaturedDataverse'
        dataverseLinkingDataverses:
          type: array
          items:
            $ref: '#/components/schemas/DataverseLinkingDataverse'
        dataverseLinkedDataverses:
          type: array
          items:
            $ref: '#/components/schemas/DataverseLinkingDataverse'
        datasetLinkingDataverses:
          type: array
          items:
            $ref: '#/components/schemas/DatasetLinkingDataverse'
        dataverseFieldTypeInputLevels:
          type: array
          items:
            $ref: '#/components/schemas/DataverseFieldTypeInputLevel'
        defaultTemplate:
          $ref: '#/components/schemas/Template'
        savedSearches:
          type: array
          items:
            $ref: '#/components/schemas/SavedSearch'
        templates:
          type: array
          items:
            $ref: '#/components/schemas/Template'
        guestbooks:
          type: array
          items:
            $ref: '#/components/schemas/Guestbook'
        harvestingClientConfigs:
          type: array
          items:
            $ref: '#/components/schemas/HarvestingClient'
        metadataBlockFacetRoot:
          type: boolean
        metadataBlockFacets:
          type: array
          items:
            $ref: '#/components/schemas/DataverseMetadataBlockFacet'
        guestbookRoot:
          type: boolean
        requireFilesToPublishDataset:
          type: boolean
        filePIDsEnabled:
          type: boolean
        friendlyCategoryName:
          type: string
        friendlyCategoryKey:
          type: string
        indexableCategoryName:
          type: string
        parentGuestbooks:
          type: array
          items:
            $ref: '#/components/schemas/Guestbook'
        availableGuestbooks:
          type: array
          items:
            $ref: '#/components/schemas/Guestbook'
        parentTemplates:
          type: array
          items:
            $ref: '#/components/schemas/Template'
        metadataRootId:
          format: int64
          type: integer
        guestbookRootDataverseName:
          type: string
        templateRootDataverseName:
          type: string
        themeRootDataverseName:
          type: string
        metadataRootDataverseName:
          type: string
        facetRootDataverseName:
          type: string
        logoOwnerId:
          type: string
        facetRootId:
          format: int64
          type: integer
        contactEmails:
          type: string
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Dataverse'
        effectiveRequiresFilesToPublishDataset:
          type: boolean
        depositTermsOfUse:
          type: string
        displayName:
          type: string
        currentName:
          type: string
        localURL:
          type: string
    DataverseContact:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        contactEmail:
          type: string
        displayOrder:
          format: int32
          type: integer
    DataverseFacet:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        displayOrder:
          format: int32
          type: integer
    DataverseFacetServiceBean:
      type: object
      properties:
        em:
          type: object
        dataverses:
          $ref: '#/components/schemas/DataverseServiceBean'
    DataverseFeaturedDataverse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        featuredDataverse:
          $ref: '#/components/schemas/Dataverse'
        displayOrder:
          format: int32
          type: integer
    DataverseFieldTypeInputLevel:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        include:
          type: boolean
        required:
          type: boolean
    DataverseFieldTypeInputLevelServiceBean:
      type: object
      properties:
        em:
          type: object
    DataverseHeaderFragment:
      type: object
      properties:
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        datafileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        bannerMessageService:
          $ref: '#/components/schemas/BannerMessageServiceBean'
        dataverseSession:
          $ref: '#/components/schemas/DataverseSession'
        settingsWrapper:
          $ref: '#/components/schemas/SettingsWrapper'
        navigationWrapper:
          $ref: '#/components/schemas/NavigationWrapper'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        breadcrumbs:
          type: array
          items:
            $ref: '#/components/schemas/Breadcrumb'
        bannerMessages:
          type: array
          items:
            $ref: '#/components/schemas/BannerMessage'
        unreadNotificationCount:
          format: int64
          type: integer
        signupAllowed:
          type: boolean
        loginRedirectPage:
          type: string
    DataverseLinkingDataverse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        linkingDataverse:
          $ref: '#/components/schemas/Dataverse'
        linkCreateTime:
          format: date
          type: string
          example: 2022-03-10
    DataverseLinkingServiceBean:
      type: object
      properties:
        em:
          type: object
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
    DataverseMetadataBlockFacet:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        metadataBlock:
          $ref: '#/components/schemas/MetadataBlock'
    DataverseRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        sourceAddress:
          $ref: '#/components/schemas/IpAddress'
        invocationId:
          type: string
        httpServletRequest:
          type: object
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        wFInvocationId:
          type: string
    DataverseRequestServiceBean:
      type: object
      properties:
        dataverseSessionSvc:
          $ref: '#/components/schemas/DataverseSession'
        request:
          type: object
        dataverseRequest:
          $ref: '#/components/schemas/DataverseRequest'
    DataverseRole:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          pattern: .+
          type: string
        description:
          maxLength: 255
          type: string
        alias:
          maxLength: 16
          pattern: "[a-zA-Z0-9\\_\\-]+"
          type: string
        permissionBits:
          format: int64
          type: integer
        owner:
          $ref: '#/components/schemas/DvObject'
        permissionsBits:
          format: int64
          type: integer
    DataverseRoleServiceBean:
      type: object
      properties:
        em:
          type: object
        roleAssigneeService:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        indexAsync:
          $ref: '#/components/schemas/IndexAsync'
    DataverseServiceBean:
      type: object
      properties:
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        authService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        dataverseLinkingService:
          $ref: '#/components/schemas/DataverseLinkingServiceBean'
        datasetLinkingService:
          $ref: '#/components/schemas/DatasetLinkingServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        rolesService:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        dataverseFieldTypeInputLevelService:
          $ref: '#/components/schemas/DataverseFieldTypeInputLevelServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        session:
          $ref: '#/components/schemas/DataverseSession'
        em:
          type: object
        datasetSchemaPreface:
          type: string
        startOfMDB:
          type: string
        reqValTemplate:
          type: string
        minItemsTemplate:
          type: string
        endOfReqVal:
          type: string
        endOfjson:
          type: string
        rootDataverseName:
          type: string
        rootDataverseExists:
          type: boolean
    DataverseSession:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        permissionsService:
          $ref: '#/components/schemas/PermissionServiceBean'
        usersSvc:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        logSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        settingsWrapper:
          $ref: '#/components/schemas/SettingsWrapper'
        headerFragment:
          $ref: '#/components/schemas/DataverseHeaderFragment'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        bannerMessageService:
          $ref: '#/components/schemas/BannerMessageServiceBean'
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        statusDismissed:
          type: boolean
        dismissedMessages:
          type: array
          items:
            $ref: '#/components/schemas/BannerMessage'
        debug:
          type: boolean
        localeCode:
          type: string
        localeTitle:
          type: string
    DataverseTheme:
      type: object
      properties:
        id:
          format: int64
          type: integer
        logoFormat:
          $ref: '#/components/schemas/ImageFormat'
        logoAlignment:
          $ref: '#/components/schemas/Alignment'
        logoBackgroundColor:
          type: string
        logo:
          type: string
        logoThumbnail:
          type: string
        logoFooterAlignment:
          $ref: '#/components/schemas/Alignment'
        logoFooterBackgroundColor:
          type: string
        logoFooter:
          type: string
        tagline:
          type: string
        linkUrl:
          type: string
        linkColor:
          type: string
        textColor:
          type: string
        backgroundColor:
          type: string
        dataverse:
          $ref: '#/components/schemas/Dataverse'
    DataverseType:
      enum:
      - RESEARCHERS
      - RESEARCH_PROJECTS
      - JOURNALS
      - ORGANIZATIONS_INSTITUTIONS
      - TEACHING_COURSES
      - UNCATEGORIZED
      - LABORATORY
      - RESEARCH_GROUP
      - DEPARTMENT
      type: string
    DefaultValueSet:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        datasetFieldDefaultValues:
          type: array
          items:
            $ref: '#/components/schemas/DatasetFieldDefaultValue'
    DevOAuthAccountType:
      enum:
      - PRODUCTION
      - RANDOM_EMAIL0
      - RANDOM_EMAIL1
      - RANDOM_EMAIL2
      - RANDOM_EMAIL3
      type: string
    DifferenceSummaryGroup:
      type: object
      properties:
        displayName:
          type: string
        type:
          type: string
        differenceSummaryItems:
          type: array
          items:
            $ref: '#/components/schemas/DifferenceSummaryItem'
    DifferenceSummaryItem:
      type: object
      properties:
        displayName:
          type: string
        changed:
          format: int32
          type: integer
        added:
          format: int32
          type: integer
        deleted:
          format: int32
          type: integer
        replaced:
          format: int32
          type: integer
        multiple:
          type: boolean
    DownloadInfo:
      type: object
      properties:
        dataFile:
          $ref: '#/components/schemas/DataFile'
        authUserName:
          type: string
        authMethod:
          type: string
        accessGranted:
          type: boolean
        accessPermissionsApply:
          type: boolean
        accessRestrictionsApply:
          type: boolean
        passAccessPermissions:
          type: boolean
        passAccessRestrictions:
          type: boolean
        optionalServicesAvailable:
          type: array
          items:
            $ref: '#/components/schemas/OptionalAccessService'
        accessRestrictionsAply:
          type: boolean
        mimeType:
          type: string
        dataFileId:
          format: int64
          type: integer
        fileName:
          type: string
        servicesAvailable:
          type: array
          items:
            $ref: '#/components/schemas/OptionalAccessService'
    DownloadInstance:
      type: object
      properties:
        extraArguments:
          type: array
          items: {}
        downloadInfo:
          $ref: '#/components/schemas/DownloadInfo'
        conversionParam:
          type: string
        conversionParamValue:
          type: string
        auxiliaryFile:
          $ref: '#/components/schemas/AuxiliaryFile'
        command:
          $ref: '#/components/schemas/EjbDataverseEngine'
        dataverseRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        gbr:
          $ref: '#/components/schemas/GuestbookResponse'
        requestUriInfo:
          type: object
        requestHttpHeaders:
          type: object
    DvObject:
      type: object
      properties:
        mergeable:
          type: boolean
        id:
          format: int64
          type: integer
        owner:
          $ref: '#/components/schemas/DvObject'
        publicationDate:
          type: object
        releaseUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        createDate:
          type: object
        modificationTime:
          type: object
        indexTime:
          type: object
        permissionModificationTime:
          type: object
        permissionIndexTime:
          type: object
        storageIdentifier:
          type: string
        dtype:
          type: string
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime:
          format: date
          type: string
          example: 2022-03-10
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        alternativePersistentIndentifiers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AlternativePersistentIdentifier'
        previewImageAvailable:
          type: boolean
        storageQuota:
          $ref: '#/components/schemas/StorageQuota'
        previewImageFail:
          type: boolean
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        roleAssignments:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
        effectivelyPermissionRoot:
          type: boolean
        released:
          type: boolean
        displayName:
          type: string
        currentName:
          type: string
        instanceofDataverse:
          type: boolean
        instanceofDataset:
          type: boolean
        instanceofDataFile:
          type: boolean
        dataverseContext:
          $ref: '#/components/schemas/Dataverse'
        authorString:
          type: string
        targetUrl:
          type: string
        yearPublishedCreated:
          type: string
    DvObjectServiceBean:
      type: object
      properties:
        em:
          type: object
        pidProviderFactoryBean:
          $ref: '#/components/schemas/PidProviderFactoryBean'
        allHarvestedDataverseIds:
          type: array
          items:
            format: int64
            type: integer
    EjbDataverseEngine:
      type: object
      properties:
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        rolesService:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        usersService:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        indexBatchService:
          $ref: '#/components/schemas/IndexBatchServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        searchService:
          $ref: '#/components/schemas/SearchServiceBean'
        ingestService:
          $ref: '#/components/schemas/IngestServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        dataverseFacetService:
          $ref: '#/components/schemas/DataverseFacetServiceBean'
        featuredDataverseService:
          $ref: '#/components/schemas/FeaturedDataverseServiceBean'
        dataFileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        templateService:
          $ref: '#/components/schemas/TemplateServiceBean'
        savedSearchService:
          $ref: '#/components/schemas/SavedSearchServiceBean'
        fieldTypeInputLevels:
          $ref: '#/components/schemas/DataverseFieldTypeInputLevelServiceBean'
        pidProviderFactory:
          $ref: '#/components/schemas/PidProviderFactoryBean'
        settings:
          $ref: '#/components/schemas/SettingsServiceBean'
        guestbookService:
          $ref: '#/components/schemas/GuestbookServiceBean'
        responses:
          $ref: '#/components/schemas/GuestbookResponseServiceBean'
        metadataBlockService:
          $ref: '#/components/schemas/MetadataBlockServiceBean'
        datasetTypeService:
          $ref: '#/components/schemas/DatasetTypeServiceBean'
        dvLinking:
          $ref: '#/components/schemas/DataverseLinkingServiceBean'
        dsLinking:
          $ref: '#/components/schemas/DatasetLinkingServiceBean'
        dsField:
          $ref: '#/components/schemas/DatasetFieldServiceBean'
        explicitGroups:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        groups:
          $ref: '#/components/schemas/GroupServiceBean'
        roleAssignees:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        authentication:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        privateUrlService:
          $ref: '#/components/schemas/PrivateUrlServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        dataCaptureModule:
          $ref: '#/components/schemas/DataCaptureModuleServiceBean'
        em:
          type: object
        logSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        workflowService:
          $ref: '#/components/schemas/WorkflowServiceBean'
        fileDownloadService:
          $ref: '#/components/schemas/FileDownloadServiceBean'
        confirmEmailService:
          $ref: '#/components/schemas/ConfirmEmailServiceBean'
        storageUseService:
          $ref: '#/components/schemas/StorageUseServiceBean'
        innerEngine:
          $ref: '#/components/schemas/EjbDataverseEngineInner'
        cacheFactory:
          $ref: '#/components/schemas/CacheFactoryBean'
        ejbCtxt:
          type: object
        ctxt:
          $ref: '#/components/schemas/CommandContext'
        context:
          $ref: '#/components/schemas/CommandContext'
    EjbDataverseEngineInner:
      type: object
      properties:
        ejbCtxt:
          type: object
    Embargo:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dateAvailable:
          format: date
          type: string
          example: 2022-03-10
        reason:
          type: string
        dataFiles:
          type: array
          items:
            $ref: '#/components/schemas/DataFile'
        formattedDateAvailable:
          type: string
    EmbargoServiceBean:
      type: object
      properties:
        em:
          type: object
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
    ExplicitGroupProvider:
      type: object
      properties:
        explicitGroupSvc:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        groupProviderAlias:
          type: string
        groupProviderInfo:
          type: string
    ExplicitGroupServiceBean:
      type: object
      properties:
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        em:
          type: object
        provider:
          $ref: '#/components/schemas/ExplicitGroupProvider'
    ExternalTool:
      type: object
      properties:
        id:
          format: int64
          type: integer
        displayName:
          type: string
        toolName:
          type: string
        description:
          type: string
        externalToolTypes:
          type: array
          items:
            $ref: '#/components/schemas/ExternalToolType'
        scope:
          $ref: '#/components/schemas/Scope'
        toolUrl:
          type: string
        toolParameters:
          type: string
        contentType:
          type: string
        allowedApiCalls:
          type: string
        requirements:
          type: string
        exploreTool:
          type: boolean
        queryTool:
          type: boolean
        previewTool:
          type: boolean
        descriptionLang:
          type: string
        displayNameLang:
          type: string
    ExternalToolType:
      type: object
      properties:
        id:
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/Type2'
        externalTool:
          $ref: '#/components/schemas/ExternalTool'
    FeaturedDataverseServiceBean:
      type: object
      properties:
        em:
          type: object
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
    FieldType:
      enum:
      - TEXT
      - TEXTBOX
      - DATE
      - EMAIL
      - URL
      - FLOAT
      - INT
      - NONE
      type: string
    FileAccessRequest:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataFile:
          $ref: '#/components/schemas/DataFile'
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
        guestbookResponse:
          $ref: '#/components/schemas/GuestbookResponse'
        requestState:
          $ref: '#/components/schemas/RequestState'
        creationTime:
          format: date
          type: string
          example: 2022-03-10
        requester:
          $ref: '#/components/schemas/AuthenticatedUser'
        state:
          $ref: '#/components/schemas/RequestState'
        stateLabel:
          type: string
        stateCreated:
          type: boolean
        stateGranted:
          type: boolean
        stateRejected:
          type: boolean
    FileDifferenceDetailItem:
      type: object
      properties:
        displayName:
          type: string
        originalValue:
          type: string
        newValue:
          type: string
    FileDifferenceSummaryGroup:
      type: object
      properties:
        name:
          type: string
        fileDifferenceSummaryItems:
          type: array
          items:
            $ref: '#/components/schemas/FileDifferenceSummaryItem'
    FileDifferenceSummaryItem:
      type: object
      properties:
        name:
          type: string
        added:
          format: int32
          type: integer
        changed:
          format: int32
          type: integer
        deleted:
          format: int32
          type: integer
        replaced:
          format: int32
          type: integer
        multiple:
          type: boolean
    FileDownloadHelper:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/DataverseSession'
        dvRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        fileDownloadService:
          $ref: '#/components/schemas/FileDownloadServiceBean'
        guestbookResponseService:
          $ref: '#/components/schemas/GuestbookResponseServiceBean'
        datafileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        globusService:
          $ref: '#/components/schemas/GlobusServiceBean'
        fileDownloadPermissionMap:
          type: object
          additionalProperties:
            type: boolean
        filesForRequestAccess:
          type: array
          items:
            $ref: '#/components/schemas/DataFile'
        selectedFileId:
          type: string
    FileDownloadServiceBean:
      type: object
      properties:
        em:
          type: object
        guestbookResponseService:
          $ref: '#/components/schemas/GuestbookResponseServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        datafileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        authService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        mailService:
          $ref: '#/components/schemas/MailServiceBean'
        session:
          $ref: '#/components/schemas/DataverseSession'
        commandEngine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        dvRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        fileDownloadHelper:
          $ref: '#/components/schemas/FileDownloadHelper'
        mdcLogService:
          $ref: '#/components/schemas/MakeDataCountLoggingServiceBean'
    FileMetadata:
      type: object
      properties:
        label:
          pattern: "^[^:<>;#/\"\\*\\|\\?\\\\]*$"
          type: string
        directoryLabel:
          type: string
        description:
          type: string
        restricted:
          type: boolean
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        dataFile:
          $ref: '#/components/schemas/DataFile'
        provFreeForm:
          type: string
        variableMetadatas:
          type: array
          items:
            $ref: '#/components/schemas/VariableMetadata'
        varGroups:
          type: array
          items:
            $ref: '#/components/schemas/VarGroup'
        fileCategories:
          type: array
          items:
            $ref: '#/components/schemas/DataFileCategory'
        id:
          format: int64
          type: integer
        version:
          format: int64
          type: integer
        inPriorVersion:
          type: boolean
        selected:
          type: boolean
        restrictedUI:
          type: boolean
        fileVersionDifference:
          $ref: '#/components/schemas/FileVersionDifference'
        contributorNames:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/DataFileCategory'
        categoriesByName:
          type: array
          items:
            type: string
        categoryNamesAsJsonArrayBuilder:
          type: object
        fileDateToDisplay:
          type: string
        fileCitation:
          type: string
    FileVersionDifference:
      type: object
      properties:
        newFileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        originalFileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        details:
          type: boolean
        same:
          type: boolean
        differenceSummaryGroups:
          type: array
          items:
            $ref: '#/components/schemas/FileDifferenceSummaryGroup'
        differenceDetailItems:
          type: array
          items:
            $ref: '#/components/schemas/FileDifferenceDetailItem'
    GlobalId:
      type: object
      properties:
        protocol:
          type: string
        authority:
          type: string
        identifier:
          type: string
        managingProviderId:
          type: string
        separator:
          type: string
        urlPrefix:
          type: string
        complete:
          type: boolean
        providerId:
          type: string
    GlobusServiceBean:
      type: object
      properties:
        datasetSvc:
          $ref: '#/components/schemas/DatasetServiceBean'
        settingsSvc:
          $ref: '#/components/schemas/SettingsServiceBean'
        session:
          $ref: '#/components/schemas/DataverseSession'
        dataverseRequestSvc:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        authSvc:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        commandEngine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        privateUrlService:
          $ref: '#/components/schemas/PrivateUrlServiceBean'
        fileDownloadService:
          $ref: '#/components/schemas/FileDownloadServiceBean'
        dataFileSvc:
          $ref: '#/components/schemas/DataFileServiceBean'
        permissionSvc:
          $ref: '#/components/schemas/PermissionServiceBean'
        ingestSvc:
          $ref: '#/components/schemas/IngestServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        em:
          type: object
        rulesCache:
          type: object
        downloadCache:
          type: object
        executor:
          type: object
    GroupProvider:
      type: object
      properties:
        groupProviderAlias:
          type: string
        groupProviderInfo:
          type: string
    GroupServiceBean:
      type: object
      properties:
        ipGroupsService:
          $ref: '#/components/schemas/IpGroupsServiceBean'
        shibGroupService:
          $ref: '#/components/schemas/ShibGroupServiceBean'
        explicitGroupService:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        mailDomainGroupService:
          $ref: '#/components/schemas/MailDomainGroupServiceBean'
        groupProviders:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GroupProvider'
        ipGroupProvider:
          $ref: '#/components/schemas/IpGroupProvider'
        shibGroupProvider:
          $ref: '#/components/schemas/ShibGroupProvider'
        explicitGroupProvider:
          $ref: '#/components/schemas/ExplicitGroupProvider'
        mailDomainGroupProvider:
          $ref: '#/components/schemas/MailDomainGroupProvider'
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
    Guestbook:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        customQuestions:
          type: array
          items:
            $ref: '#/components/schemas/CustomQuestion'
        name:
          type: string
        enabled:
          type: boolean
        nameRequired:
          type: boolean
        emailRequired:
          type: boolean
        institutionRequired:
          type: boolean
        positionRequired:
          type: boolean
        createTime:
          format: date
          type: string
          example: 2022-03-10
        deletable:
          type: boolean
        usageCount:
          format: int64
          type: integer
        usageCountDataverse:
          format: int64
          type: integer
        responseCount:
          format: int64
          type: integer
        responseCountDataverse:
          format: int64
          type: integer
        createDate:
          type: string
        requiredAccountInformation:
          type: array
          items:
            type: string
        optionalAccountInformation:
          type: array
          items:
            type: string
        requiredQuestionsList:
          type: array
          items:
            type: string
        optionalQuestionsList:
          type: array
          items:
            type: string
    GuestbookResponse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        guestbook:
          $ref: '#/components/schemas/Guestbook'
        dataFile:
          $ref: '#/components/schemas/DataFile'
        dataset:
          $ref: '#/components/schemas/Dataset'
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        fileAccessRequests:
          type: array
          items:
            $ref: '#/components/schemas/FileAccessRequest'
        customQuestionResponses:
          type: array
          items:
            $ref: '#/components/schemas/CustomQuestionResponse'
        name:
          maxLength: 255
          type: string
        email:
          maxLength: 255
          type: string
        institution:
          maxLength: 255
          type: string
        position:
          maxLength: 255
          type: string
        responseTime:
          format: date
          type: string
          example: 2022-03-10
        sessionId:
          type: string
        eventType:
          type: string
        writeResponse:
          type: boolean
        selectedFileIds:
          type: string
        fileFormat:
          type: string
        externalTool:
          $ref: '#/components/schemas/ExternalTool'
        responseDate:
          type: string
        customQuestionResponsesSorted:
          type: array
          items:
            $ref: '#/components/schemas/CustomQuestionResponse'
        fileAccessRequest:
          type: array
          items:
            $ref: '#/components/schemas/FileAccessRequest'
    GuestbookResponseServiceBean:
      type: object
      properties:
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        em:
          type: object
        totalDownloadCount:
          format: int64
          type: integer
    GuestbookServiceBean:
      type: object
      properties:
        em:
          type: object
    HarvestingClient:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        harvestedDatasets:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
        name:
          maxLength: 30
          type: string
        harvestType:
          type: string
        harvestStyle:
          type: string
        harvestingUrl:
          type: string
        archiveUrl:
          type: string
        archiveDescription:
          type: string
        harvestingSet:
          type: string
        metadataPrefix:
          type: string
        customHttpHeaders:
          type: string
        allowHarvestingMissingCVV:
          type: boolean
        useOaiIdAsPid:
          type: boolean
        harvestHistory:
          type: array
          items:
            $ref: '#/components/schemas/ClientHarvestRun'
        scheduled:
          type: boolean
        schedulePeriod:
          type: string
        scheduleHourOfDay:
          format: int32
          type: integer
        scheduleDayOfWeek:
          format: int32
          type: integer
        harvestingNow:
          type: boolean
        deleted:
          type: boolean
        oai:
          type: boolean
        useOaiIdentifiersAsPids:
          type: boolean
        runHistory:
          type: array
          items:
            $ref: '#/components/schemas/ClientHarvestRun'
        lastResult:
          type: string
        lastRun:
          $ref: '#/components/schemas/ClientHarvestRun'
        lastSuccessfulRun:
          $ref: '#/components/schemas/ClientHarvestRun'
        lastNonEmptyRun:
          $ref: '#/components/schemas/ClientHarvestRun'
        lastHarvestTime:
          format: date
          type: string
          example: 2022-03-10
        lastSuccessfulHarvestTime:
          format: date
          type: string
          example: 2022-03-10
        lastNonEmptyHarvestTime:
          format: date
          type: string
          example: 2022-03-10
        lastHarvestedDatasetCount:
          format: int64
          type: integer
        lastFailedDatasetCount:
          format: int64
          type: integer
        lastDeletedDatasetCount:
          format: int64
          type: integer
        scheduleDescription:
          type: string
        deleteInProgress:
          type: boolean
    ImageFormat:
      enum:
      - SQUARE
      - RECTANGLE
      type: string
    IndexAsync:
      type: object
      properties:
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
    IndexBatchServiceBean:
      type: object
      properties:
        em:
          type: object
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        contentInDatabaseButStaleInOrMissingFromSolr:
          type: object
        contentInSolrButNotDatabase:
          type: object
        permissionsInDatabaseButStaleInOrMissingFromSolr:
          type: object
        permissionsInSolrButNotDatabase:
          type: object
    IndexServiceBean:
      type: object
      properties:
        em:
          type: object
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        dataverseUserServiceBean:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        userServiceBean:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        searchPermissionsService:
          $ref: '#/components/schemas/SearchPermissionsServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        dsLinkingService:
          $ref: '#/components/schemas/DatasetLinkingServiceBean'
        dvLinkingService:
          $ref: '#/components/schemas/DataverseLinkingServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        solrClientService:
          $ref: '#/components/schemas/SolrClientService'
        dataFileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        variableService:
          $ref: '#/components/schemas/VariableServiceBean'
        indexBatchService:
          $ref: '#/components/schemas/IndexBatchServiceBean'
        datasetFieldService:
          $ref: '#/components/schemas/DatasetFieldServiceBean'
        datasetVersionFilesServiceBean:
          $ref: '#/components/schemas/DatasetVersionFilesServiceBean'
        rootDataverseName:
          type: string
        rootDataverseCached:
          $ref: '#/components/schemas/Dataverse'
        solrServer:
          type: object
        variableMetadataUtil:
          $ref: '#/components/schemas/VariableMetadataUtil'
        indexPermitWaitTimer:
          type: object
        indexTimer:
          type: object
    IngestReport:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataFile:
          $ref: '#/components/schemas/DataFile'
        report:
          type: string
        type:
          format: int32
          type: integer
        status:
          format: int32
          type: integer
        startTime:
          format: date
          type: string
          example: 2022-03-10
        endTime:
          format: date
          type: string
          example: 2022-03-10
        failure:
          type: boolean
    IngestRequest:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataFile:
          $ref: '#/components/schemas/DataFile'
        textEncoding:
          type: string
        controlCard:
          type: string
        labelsFile:
          type: string
        forceTypeCheck:
          type: boolean
    IngestServiceBean:
      type: object
      properties:
        variableService:
          $ref: '#/components/schemas/VariableServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        fieldService:
          $ref: '#/components/schemas/DatasetFieldServiceBean'
        fileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        auxiliaryFileService:
          $ref: '#/components/schemas/AuxiliaryFileServiceBean'
        storageUseService:
          $ref: '#/components/schemas/StorageUseServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        queue:
          type: object
        factory:
          type: object
    IpAddress:
      type: object
      properties:
        localhost:
          type: boolean
    IpGroupProvider:
      type: object
      properties:
        ipGroupsService:
          $ref: '#/components/schemas/IpGroupsServiceBean'
        groupProviderAlias:
          type: string
        groupProviderInfo:
          type: string
    IpGroupsServiceBean:
      type: object
      properties:
        em:
          type: object
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
    JsonLDNamespace:
      type: object
      properties:
        prefix:
          type: string
        url:
          type: string
    JsonLDTerm:
      type: object
      properties:
        namespace:
          $ref: '#/components/schemas/JsonLDNamespace'
        term:
          type: string
        url:
          type: string
        label:
          type: string
    License:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        shortDescription:
          type: string
        uri:
          type: string
        iconUrl:
          type: string
        active:
          type: boolean
        isDefault:
          type: boolean
        sortOrder:
          format: int64
          type: integer
        termsOfUseAndAccess:
          type: array
          items:
            $ref: '#/components/schemas/TermsOfUseAndAccess'
        default:
          type: boolean
    MailDomainGroup:
      required:
      - emailDomains
      type: object
      properties:
        sortByString:
          type: string
        id:
          format: int64
          type: integer
        persistedGroupAlias:
          type: string
        displayName:
          type: string
        description:
          type: string
        alias:
          type: string
        displayInfo:
          $ref: '#/components/schemas/RoleAssigneeDisplayInfo'
        identifier:
          type: string
        emailDomains:
          minLength: 1
          type: string
        isRegEx:
          type: boolean
        provider:
          $ref: '#/components/schemas/MailDomainGroupProvider'
        emailDomainsAsList:
          type: array
          items:
            type: string
        regEx:
          type: boolean
        groupProvider:
          $ref: '#/components/schemas/MailDomainGroupProvider'
        editable:
          type: boolean
    MailDomainGroupProvider:
      type: object
      properties:
        emailGroupSvc:
          $ref: '#/components/schemas/MailDomainGroupServiceBean'
        groupProviderAlias:
          type: string
        groupProviderInfo:
          type: string
    MailDomainGroupServiceBean:
      type: object
      properties:
        em:
          type: object
        confirmEmailSvc:
          $ref: '#/components/schemas/ConfirmEmailServiceBean'
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        provider:
          $ref: '#/components/schemas/MailDomainGroupProvider'
        simpleGroups:
          type: array
          items:
            $ref: '#/components/schemas/MailDomainGroup'
        regexGroups:
          type: object
          additionalProperties: {}
    MailServiceBean:
      type: object
      properties:
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        dataFileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        versionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        confirmEmailService:
          $ref: '#/components/schemas/ConfirmEmailServiceBean'
        session:
          type: object
        systemAddress:
          type: object
          nullable: true
        supportAddress:
          type: object
          nullable: true
    MakeDataCountLoggingServiceBean:
      type: object
      properties:
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        logFileName:
          type: string
    MetadataBlock:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        displayName:
          type: string
        namespaceUri:
          type: string
        datasetFieldTypes:
          type: array
          items:
            $ref: '#/components/schemas/DatasetFieldType'
        owner:
          $ref: '#/components/schemas/Dataverse'
        empty:
          type: boolean
        selected:
          type: boolean
        hasRequired:
          type: boolean
        showDatasetFieldTypes:
          type: boolean
        assignedNamespaceUri:
          type: string
        jsonLDNamespace:
          $ref: '#/components/schemas/JsonLDNamespace'
        displayOnCreate:
          type: boolean
        required:
          type: boolean
        idString:
          type: string
        localeDisplayName:
          type: string
        localeDisplayFacet:
          type: string
    MetadataBlockServiceBean:
      type: object
      properties:
        em:
          type: object
    NavigationWrapper:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/DataverseSession'
        redirectPage:
          type: string
        pageFromContext:
          type: string
    OAIRecordServiceBean:
      type: object
      properties:
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        em:
          type: object
        earliestDate:
          format: date-time
          type: string
          example: 2022-03-10T16:15:50Z
    OAuth2TokenData:
      type: object
      properties:
        id:
          format: int64
          type: integer
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
        oauthProviderId:
          type: string
        expiryDate:
          type: object
        accessToken:
          type: string
        refreshToken:
          type: string
        tokenType:
          type: string
        rawResponse:
          type: string
    OIDCAuthProvider:
      type: object
      properties:
        passwordUpdateAllowed:
          type: boolean
        userDeletionAllowed:
          type: boolean
        persistentIdName:
          type: string
        persistentIdDescription:
          type: string
        persistentIdUrlPrefix:
          type: string
        logo:
          type: string
        emailVerified:
          type: boolean
        friendlyName:
          type: string
        subTitle:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        baseUserEndpoint:
          type: string
        redirectUrl:
          type: string
        userInfoUpdateAllowed:
          type: boolean
        info:
          $ref: '#/components/schemas/AuthenticationProviderDisplayInfo'
        order:
          format: int32
          type: integer
        iconHtml:
          type: string
          nullable: true
        spacedScope:
          type: string
        oAuthProvider:
          type: boolean
        id:
          type: string
        title:
          type: string
        scope:
          type: array
          items:
            type: string
        issuer:
          type: object
        clientAuth:
          type: object
        idpMetadata:
          type: object
        pkceEnabled:
          type: boolean
        pkceMethod:
          type: object
        verifierCache:
          type: object
        displayIdentifier:
          type: boolean
        metadata:
          type: object
        apiInstance:
          type: object
    OptionalAccessService:
      type: object
      properties:
        serviceName:
          type: string
        serviceDescription:
          type: string
        contentMimeType:
          type: string
        serviceArguments:
          type: string
        mimeType:
          type: string
    PasswordResetServiceBean:
      type: object
      properties:
        dataverseUserService:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        mailService:
          $ref: '#/components/schemas/MailServiceBean'
        passwordValidatorService:
          $ref: '#/components/schemas/PasswordValidatorServiceBean'
        authService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        em:
          type: object
    PasswordValidatorServiceBean:
      type: object
      properties:
        goodStrength:
          format: int32
          type: integer
        maxLength:
          format: int32
          type: integer
        minLength:
          format: int32
          type: integer
        numberOfCharacteristics:
          format: int32
          type: integer
        numberOfConsecutiveDigitsAllowed:
          format: int32
          type: integer
        characterRules:
          type: array
          items: {}
        dictionaries:
          type: string
        messageResolver:
          type: object
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
    Permission:
      enum:
      - AddDataverse
      - AddDataset
      - ViewUnpublishedDataverse
      - ViewUnpublishedDataset
      - DownloadFile
      - EditDataverse
      - EditDataset
      - ManageDataversePermissions
      - ManageDatasetPermissions
      - ManageFilePermissions
      - PublishDataverse
      - PublishDataset
      - DeleteDataverse
      - DeleteDatasetDraft
      type: string
    PermissionServiceBean:
      type: object
      properties:
        userService:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        roleService:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        roleAssigneeService:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        dvObjectServiceBean:
          $ref: '#/components/schemas/DvObjectServiceBean'
        workflowService:
          $ref: '#/components/schemas/WorkflowServiceBean'
        em:
          type: object
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        session:
          $ref: '#/components/schemas/DataverseSession'
        dvRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        datasetVersionFilesServiceBean:
          $ref: '#/components/schemas/DatasetVersionFilesServiceBean'
    PidProvider:
      type: object
      properties:
        providerInformation:
          type: array
          items:
            type: string
        urlPrefix:
          type: string
        separator:
          type: string
        protocol:
          type: string
        providerType:
          type: string
        id:
          type: string
        label:
          type: string
        authority:
          type: string
        shoulder:
          type: string
        identifierGenerationStyle:
          type: string
        pidProviderServiceBean:
          $ref: '#/components/schemas/PidProviderFactoryBean'
        datafilePidFormat:
          type: string
        managedSet:
          uniqueItems: true
          type: array
          items:
            type: string
        excludedSet:
          uniqueItems: true
          type: array
          items:
            type: string
        providerSpecification:
          type: object
    PidProviderFactory:
      type: object
      properties:
        type:
          type: string
    PidProviderFactoryBean:
      type: object
      properties:
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        loader:
          type: array
          items:
            $ref: '#/components/schemas/PidProviderFactory'
        pidProviderFactoryMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PidProviderFactory'
        producer:
          type: string
        defaultPidGenerator:
          $ref: '#/components/schemas/PidProvider'
    PrivateUrlServiceBean:
      type: object
      properties:
        em:
          type: object
        datasetServiceBean:
          $ref: '#/components/schemas/DatasetServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
    Reason:
      enum:
      - Ingest
      - Workflow
      - InReview
      - DcmUpload
      - GlobusUpload
      - finalizePublication
      - EditInProgress
      - FileValidationFailed
      type: string
    RequestState:
      enum:
      - CREATED
      - GRANTED
      - REJECTED
      type: string
    Retention:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dateUnavailable:
          format: date
          type: string
          example: 2022-03-10
        reason:
          type: string
        dataFiles:
          type: array
          items:
            $ref: '#/components/schemas/DataFile'
        formattedDateUnavailable:
          type: string
    RoleAssignee:
      type: object
      properties:
        identifier:
          type: string
        displayInfo:
          $ref: '#/components/schemas/RoleAssigneeDisplayInfo'
        sortByString:
          type: string
    RoleAssigneeDisplayInfo:
      type: object
      properties:
        title:
          type: string
        emailAddress:
          type: string
        affiliation:
          type: string
    RoleAssigneeServiceBean:
      type: object
      properties:
        em:
          type: object
        authSvc:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        groupSvc:
          $ref: '#/components/schemas/GroupServiceBean'
        explicitGroupSvc:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        dataverseRoleService:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        predefinedRoleAssignees:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RoleAssignee'
    RoleAssignment:
      type: object
      properties:
        id:
          format: int64
          type: integer
        assigneeIdentifier:
          type: string
        role:
          $ref: '#/components/schemas/DataverseRole'
        definitionPoint:
          $ref: '#/components/schemas/DvObject'
        privateUrlToken:
          type: string
        privateUrlAnonymizedAccess:
          type: boolean
        anonymizedAccess:
          type: boolean
    RunResultType:
      enum:
      - COMPLETED
      - COMPLETED_WITH_FAILURES
      - FAILURE
      - IN_PROGRESS
      - INTERRUPTED
      type: string
    SavedSearch:
      type: object
      properties:
        id:
          format: int64
          type: integer
        query:
          type: string
        savedSearchFilterQueries:
          type: array
          items:
            $ref: '#/components/schemas/SavedSearchFilterQuery'
        definitionPoint:
          $ref: '#/components/schemas/Dataverse'
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        filterQueriesAsStrings:
          type: array
          items:
            type: string
    SavedSearchFilterQuery:
      type: object
      properties:
        id:
          format: int64
          type: integer
        filterQuery:
          type: string
        savedSearch:
          $ref: '#/components/schemas/SavedSearch'
    SavedSearchServiceBean:
      type: object
      properties:
        searchService:
          $ref: '#/components/schemas/SearchServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        dsLinkingService:
          $ref: '#/components/schemas/DatasetLinkingServiceBean'
        dvLinkingService:
          $ref: '#/components/schemas/DataverseLinkingServiceBean'
        commandEngine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        resultString:
          type: string
        em:
          type: object
    Scope:
      enum:
      - DATASET
      - FILE
      type: string
    SearchPermissionsServiceBean:
      type: object
      properties:
        userServiceBean:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        roleAssigneeService:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        rolesSvc:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        authSvc:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        roleAssigneeCache:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RoleAssignee'
    SearchServiceBean:
      type: object
      properties:
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        datasetFieldService:
          $ref: '#/components/schemas/DatasetFieldServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        solrClientService:
          $ref: '#/components/schemas/SolrClientService'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        thumbnailServiceWrapper:
          $ref: '#/components/schemas/ThumbnailServiceWrapper'
    SettingsServiceBean:
      type: object
      properties:
        em:
          type: object
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        configuredLanguages:
          uniqueItems: true
          type: array
          items:
            type: string
    SettingsWrapper:
      type: object
      properties:
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        fieldService:
          $ref: '#/components/schemas/DatasetFieldServiceBean'
        mdbService:
          $ref: '#/components/schemas/MetadataBlockServiceBean'
        mailServiceBean:
          $ref: '#/components/schemas/MailServiceBean'
        settingsMap:
          type: object
          additionalProperties:
            type: string
        guidesBaseUrl:
          type: string
        embargoDateChecked:
          type: boolean
        maxEmbargoDate:
          format: date
          type: string
          example: 2022-03-10
        retentionDateChecked:
          type: boolean
        minRetentionDate:
          format: date
          type: string
          example: 2022-03-10
        siteUrl:
          type: string
        rootDataverse:
          $ref: '#/components/schemas/Dataverse'
        guidesVersion:
          type: string
        appVersion:
          type: string
        appVersionWithBuildNumber:
          type: string
        shibPassiveLoginEnabled:
          type: boolean
        footerCopyrightAndYear:
          type: string
        cachedCvocMap:
          type: object
          additionalProperties: {}
        cachedCvocByTermFieldMap:
          type: object
          additionalProperties: {}
        cvocFieldSet:
          uniqueItems: true
          type: array
          items:
            format: int64
            type: integer
        zipDownloadLimit:
          format: int64
          type: integer
        publicInstall:
          type: boolean
        uploadMethodsCount:
          format: int32
          type: integer
        rsyncUpload:
          type: boolean
        rsyncDownload:
          type: boolean
        globusUpload:
          type: boolean
        globusDownload:
          type: boolean
        globusFileDownload:
          type: boolean
        globusAppUrl:
          type: string
        globusStoreList:
          type: array
          items:
            type: string
        httpUpload:
          type: boolean
        rsyncOnly:
          type: boolean
        webloaderUpload:
          type: boolean
        metricsUrl:
          type: string
        dataFilePIDSequentialDependent:
          type: boolean
        customLicenseAllowed:
          type: boolean
        systemMetadataBlocks:
          type: array
          items:
            $ref: '#/components/schemas/MetadataBlock'
        alwaysMuted:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type'
        neverMuted:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type'
        configuredLocales:
          type: object
          additionalProperties:
            type: string
        anonymizedFieldTypes:
          type: array
          items:
            type: string
        languageMap:
          type: object
          additionalProperties:
            type: string
        allowedExternalStatuses:
          type: array
          items:
            type: string
        alwaysMutedSet:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type'
        neverMutedSet:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type'
        showMuteOptions:
          type: boolean
        dataverseSiteUrl:
          type: string
        hTTPUpload:
          type: boolean
        supportTeamName:
          type: string
        supportTeamEmail:
          type: string
        rootDataverseThemeDisabled:
          type: boolean
        dropBoxKey:
          type: string
        hasDropBoxKey:
          type: boolean
        localesConfigured:
          type: boolean
        makeDataCountDisplayEnabled:
          type: boolean
        mDCStartDate:
          format: date
          type: string
          example: 2022-03-10
        minEmbargoDate:
          format: date
          type: string
          example: 2022-03-10
        embargoAllowed:
          type: boolean
        maxRetentionDate:
          format: date
          type: string
          example: 2022-03-10
        retentionAllowed:
          type: boolean
        defaultMetadataLanguage:
          type: string
    ShibGroupProvider:
      type: object
      properties:
        shibGroupService:
          $ref: '#/components/schemas/ShibGroupServiceBean'
        groupProviderAlias:
          type: string
        groupProviderInfo:
          type: string
    ShibGroupServiceBean:
      type: object
      properties:
        em:
          type: object
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
    SolrClientService:
      type: object
      properties:
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        solrClient:
          type: object
    SolrField:
      type: object
      properties:
        nameSearchable:
          type: string
        nameFacetable:
          type: string
        solrType:
          $ref: '#/components/schemas/SolrType'
        allowedToBeMultivalued:
          type: boolean
        facetable:
          type: boolean
    SolrIndexServiceBean:
      type: object
      properties:
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        searchPermissionsService:
          $ref: '#/components/schemas/SearchPermissionsServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        rolesSvc:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        solrClientService:
          $ref: '#/components/schemas/SolrClientService'
        unpublishedDataRelatedToMeModeEnabled:
          type: boolean
          deprecated: true
    SolrType:
      enum:
      - STRING
      - TEXT_EN
      - INTEGER
      - FLOAT
      - DATE
      - EMAIL
      type: string
    StorageIODataFile:
      type: object
      properties:
        isReadAccess:
          type: boolean
        isWriteAccess:
          type: boolean
        req:
          $ref: '#/components/schemas/DataAccessRequest'
        in:
          format: binary
          type: string
        out:
          type: object
        channel:
          type: object
        dvObject:
          $ref: '#/components/schemas/DataFile'
        driverId:
          type: string
        size:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        mimeType:
          type: string
        fileName:
          type: string
        varHeader:
          type: string
        errorMessage:
          type: string
        temporarySwiftUrl:
          type: string
        tempUrlExpiry:
          type: string
        tempUrlSignature:
          type: string
        swiftContainerName:
          type: string
        isLocalFile:
          type: boolean
        noVarHeader:
          type: boolean
        isZippedStream:
          type: boolean
        isDownloadSupported:
          type: boolean
        isSubsetSupported:
          type: boolean
        swiftFileName:
          type: string
        remoteUrl:
          type: string
        remoteStoreName:
          type: string
        remoteStoreUrl:
          type: object
        storageLocation:
          type: string
        fileSystemPath:
          type: array
        writeChannel:
          type: object
        readChannel:
          type: object
        dataFile:
          $ref: '#/components/schemas/DataFile'
        dataset:
          $ref: '#/components/schemas/Dataset'
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        request:
          $ref: '#/components/schemas/DataAccessRequest'
        inputStream:
          format: binary
          type: string
        outputStream:
          type: object
        localFile:
          type: boolean
        directAccess:
          type: boolean
        downloadSupported:
          type: boolean
        subsetSupported:
          type: boolean
        zippedStream:
          type: boolean
        belowIngestSizeLimit:
          type: boolean
    StorageQuota:
      type: object
      properties:
        id:
          format: int64
          type: integer
        definitionPoint:
          $ref: '#/components/schemas/DvObject'
        allocation:
          format: int64
          type: integer
    StorageUse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dvObjectContainer:
          $ref: '#/components/schemas/DvObject'
        sizeInBytes:
          format: int64
          type: integer
    StorageUseServiceBean:
      type: object
      properties:
        em:
          type: object
    SummaryStatistic:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
        type:
          $ref: '#/components/schemas/SummaryStatisticType'
        value:
          type: string
        typeLabel:
          type: string
        typeByLabel:
          type: string
        typeMean:
          type: boolean
        typeMedian:
          type: boolean
        typeMode:
          type: boolean
        typeMin:
          type: boolean
        typeMax:
          type: boolean
        typeStdDev:
          type: boolean
        typeValid:
          type: boolean
        typeInvalid:
          type: boolean
    SummaryStatisticType:
      enum:
      - MEAN
      - MEDN
      - MODE
      - MIN
      - MAX
      - STDEV
      - VALD
      - INVD
      type: string
    SystemConfig:
      type: object
      properties:
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        buildNumber:
          type: string
        version:
          type: string
        solrHostColonPort:
          type: string
        provCollectionEnabled:
          type: boolean
        metricsCacheTimeoutMinutes:
          format: int32
          type: integer
        minutesUntilConfirmEmailTokenExpires:
          format: int32
          type: integer
        dataverseSiteUrl:
          type: string
        pageURLWithQueryString:
          type: string
        guidesBaseUrl:
          type: string
        guidesLanguage:
          type: string
        guidesVersion:
          type: string
        metricsUrl:
          type: string
        zipDownloadLimit:
          format: int64
          type: integer
        zipUploadFilesLimit:
          format: int32
          type: integer
        loginSessionTimeout:
          format: int32
          type: integer
        multipleUploadFilesLimit:
          format: int32
          type: integer
        guestbookResponsesPageDisplayLimit:
          format: int64
          type: integer
        uploadLogoSizeLimit:
          format: int64
          type: integer
        thumbnailSizeLimitImage:
          format: int64
          type: integer
        thumbnailSizeLimitPDF:
          format: int64
          type: integer
        thumbnailGenerationDisabledForImages:
          type: boolean
        thumbnailGenerationDisabledForPDF:
          type: boolean
        applicationTermsOfUse:
          type: string
        apiTermsOfUse:
          type: string
        applicationPrivacyPolicyUrl:
          type: string
        filesOnDatasetPageFromSolr:
          type: boolean
        searchHighlightFragmentSize:
          format: int32
          type: integer
        tabularIngestSizeLimit:
          format: int64
          type: integer
        oAIServerEnabled:
          type: boolean
        timerServer:
          type: boolean
        footerCopyrightAndYear:
          type: string
        fileFixityChecksumAlgorithm:
          $ref: '#/components/schemas/ChecksumType'
        defaultAuthProvider:
          type: string
        nameOfInstallation:
          type: string
        devOAuthAccountType:
          $ref: '#/components/schemas/DevOAuthAccountType'
        oAuth2CallbackUrl:
          type: string
        shibPassiveLoginEnabled:
          type: boolean
        shibAttributeCharacterSetConversionEnabled:
          type: boolean
        pVDictionaries:
          type: string
        pVGoodStrength:
          format: int32
          type: integer
        pVMinLength:
          format: int32
          type: integer
        pVMaxLength:
          format: int32
          type: integer
        pVCharacterRules:
          type: array
          items: {}
        pVNumberOfCharacteristics:
          format: int32
          type: integer
        pVNumberOfConsecutiveDigitsAllowed:
          format: int32
          type: integer
        publicInstall:
          type: boolean
        rsyncUpload:
          type: boolean
          deprecated: true
        globusUpload:
          type: boolean
        webloaderUpload:
          type: boolean
        hTTPUpload:
          type: boolean
        rsyncOnly:
          type: boolean
          deprecated: true
        rsyncDownload:
          type: boolean
          deprecated: true
        hTTPDownload:
          type: boolean
        globusDownload:
          type: boolean
        globusFileDownload:
          type: boolean
        globusBatchLookupSize:
          format: int32
          type: integer
        uploadMethodCount:
          format: int32
          type: integer
        allowCustomTerms:
          type: boolean
        mDCLogPath:
          type: string
        datafileValidationOnPublishEnabled:
          type: boolean
        externalDataverseValidationEnabled:
          type: boolean
        externalDatasetValidationEnabled:
          type: boolean
        dataverseValidationExecutable:
          type: string
        datasetValidationExecutable:
          type: string
        dataverseValidationFailureMsg:
          type: string
        dataverseUpdateValidationFailureMsg:
          type: string
        datasetValidationFailureMsg:
          type: string
        externalValidationAdminOverrideEnabled:
          type: boolean
        datasetValidationSizeLimit:
          format: int64
          type: integer
        fileValidationSizeLimit:
          format: int64
          type: integer
        curationLabels:
          type: object
          additionalProperties: {}
        storageQuotasEnforced:
          type: boolean
        testStorageQuotaLimit:
          format: int64
          type: integer
        storingIngestedFilesWithHeaders:
          type: boolean
        rateLimitsJson:
          type: string
        rateLimitingDefaultCapacityTiers:
          type: string
    TagType:
      enum:
      - Survey
      - TimeSeries
      - Panel
      - Event
      - Genomics
      - Network
      - Geospatial
      type: string
    Template:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 255
          type: string
        usageCount:
          format: int64
          type: integer
        createTime:
          format: date
          type: string
          example: 2022-03-10
        termsOfUseAndAccess:
          $ref: '#/components/schemas/TermsOfUseAndAccess'
        datasetFields:
          type: array
          items:
            $ref: '#/components/schemas/DatasetField'
        instructions:
          type: string
        instructionsMap:
          type: object
          additionalProperties:
            type: string
        metadataBlocksForView:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/DatasetField'
        metadataBlocksForEdit:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/DatasetField'
        isDefaultForDataverse:
          type: boolean
        dataversesHasAsDefault:
          type: array
          items:
            $ref: '#/components/schemas/Dataverse'
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        createDate:
          type: string
        metadataValueBlocks:
          type: array
          items:
            $ref: '#/components/schemas/MetadataBlock'
        flatDatasetFields:
          type: array
          items:
            $ref: '#/components/schemas/DatasetField'
    TemplateServiceBean:
      type: object
      properties:
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        em:
          type: object
    TermsOfUseAndAccess:
      type: object
      properties:
        id:
          format: int64
          type: integer
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        template:
          $ref: '#/components/schemas/Template'
        license:
          $ref: '#/components/schemas/License'
        termsOfUse:
          type: string
        termsOfAccess:
          type: string
        confidentialityDeclaration:
          type: string
        specialPermissions:
          type: string
        restrictions:
          type: string
        citationRequirements:
          type: string
        depositorRequirements:
          type: string
        conditions:
          type: string
        disclaimer:
          type: string
        dataAccessPlace:
          type: string
        originalArchive:
          type: string
        availabilityStatus:
          type: string
        contactForAccess:
          type: string
        sizeOfCollection:
          type: string
        studyCompletion:
          type: string
        fileAccessRequest:
          type: boolean
        validationMessage:
          type: string
    ThumbnailServiceWrapper:
      type: object
      properties:
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        dataFileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        dvobjectThumbnailsMap:
          type: object
          additionalProperties:
            type: string
        dvobjectViewMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DvObject'
        hasThumbMap:
          type: object
          additionalProperties:
            type: boolean
    Type:
      enum:
      - ASSIGNROLE
      - REVOKEROLE
      - CREATEDV
      - CREATEDS
      - CREATEACC
      - SUBMITTEDDS
      - RETURNEDDS
      - PUBLISHEDDS
      - REQUESTFILEACCESS
      - GRANTFILEACCESS
      - REJECTFILEACCESS
      - FILESYSTEMIMPORT
      - CHECKSUMIMPORT
      - CHECKSUMFAIL
      - CONFIRMEMAIL
      - APIGENERATED
      - INGESTCOMPLETED
      - INGESTCOMPLETEDWITHERRORS
      - PUBLISHFAILED_PIDREG
      - WORKFLOW_SUCCESS
      - WORKFLOW_FAILURE
      - STATUSUPDATED
      - DATASETCREATED
      - DATASETMENTIONED
      - GLOBUSUPLOADCOMPLETED
      - GLOBUSUPLOADCOMPLETEDWITHERRORS
      - GLOBUSDOWNLOADCOMPLETED
      - GLOBUSDOWNLOADCOMPLETEDWITHERRORS
      - REQUESTEDFILEACCESS
      - GLOBUSUPLOADREMOTEFAILURE
      - GLOBUSUPLOADLOCALFAILURE
      type: string
    Type1:
      enum:
      - RETURN_TO_AUTHOR
      - WORKFLOW_SUCCESS
      - WORKFLOW_FAILURE
      type: string
    Type2:
      enum:
      - EXPLORE
      - CONFIGURE
      - PREVIEW
      - QUERY
      type: string
    User:
      type: object
      properties:
        identifier:
          type: string
        displayInfo:
          $ref: '#/components/schemas/RoleAssigneeDisplayInfo'
        sortByString:
          type: string
        authenticated:
          type: boolean
        superuser:
          type: boolean
        deactivated:
          type: boolean
    UserBannerMessage:
      type: object
      properties:
        id:
          format: int64
          type: integer
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
        bannerMessage:
          $ref: '#/components/schemas/BannerMessage'
        bannerDismissalTime:
          format: date
          type: string
          example: 2022-03-10
    UserNotification:
      type: object
      properties:
        id:
          format: int64
          type: integer
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
        requestor:
          $ref: '#/components/schemas/AuthenticatedUser'
        sendDate:
          type: object
        readNotification:
          type: boolean
        type:
          $ref: '#/components/schemas/Type'
        objectId:
          format: int64
          type: integer
        additionalInfo:
          type: string
        displayAsRead:
          type: boolean
        roleString:
          type: string
        emailed:
          type: boolean
        theObject: {}
        sendDateTimestamp:
          type: object
        localeSendDate:
          type: string
    UserNotificationServiceBean:
      type: object
      properties:
        mailService:
          $ref: '#/components/schemas/MailServiceBean'
        em:
          type: object
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
    UserServiceBean:
      type: object
      properties:
        em:
          type: object
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        superUserCount:
          format: int64
          type: integer
        totalUserCount:
          format: int64
          type: integer
    VarGroup:
      type: object
      properties:
        id:
          format: int64
          type: integer
        label:
          type: string
        fileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        varsInGroup:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DataVariable'
    VariableCategory:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
        value:
          type: string
        label:
          type: string
        missing:
          type: boolean
        catOrder:
          format: int32
          type: integer
        frequency:
          format: double
          type: number
        order:
          format: int32
          type: integer
    VariableInterval:
      enum:
      - DISCRETE
      - CONTINUOUS
      - NOMINAL
      - DICHOTOMOUS
      type: string
    VariableMetadata:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
        fileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        label:
          type: string
        literalquestion:
          type: string
        postquestion:
          type: string
        interviewinstruction:
          type: string
        universe:
          type: string
        notes:
          type: string
        isweightvar:
          type: boolean
        weighted:
          type: boolean
        categoriesMetadata:
          type: array
          items:
            $ref: '#/components/schemas/CategoryMetadata'
        weightvariable:
          $ref: '#/components/schemas/DataVariable'
    VariableMetadataUtil:
      type: object
    VariableRange:
      type: object
      properties:
        id:
          format: int64
          type: integer
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
        beginValue:
          type: string
        endValue:
          type: string
        beginValueType:
          $ref: '#/components/schemas/VariableRangeType'
        endValueType:
          $ref: '#/components/schemas/VariableRangeType'
        beginValueTypeMin:
          type: boolean
        beginValueTypeMax:
          type: boolean
        beginValueTypeMinExcl:
          type: boolean
        beginValueTypeMaxExcl:
          type: boolean
        beginValueTypePoint:
          type: boolean
        endValueTypeMin:
          type: boolean
        endValueTypeMax:
          type: boolean
        endValueTypeMinExcl:
          type: boolean
        endValueTypeMaxExcl:
          type: boolean
        endValueTypePoint:
          type: boolean
    VariableRangeItem:
      type: object
      properties:
        id:
          format: int64
          type: integer
        value:
          type: number
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
    VariableRangeType:
      enum:
      - MIN
      - MAX
      - MIN_EXCLUSIVE
      - MAX_EXCLUSIVE
      - POINT
      type: string
    VariableServiceBean:
      type: object
      properties:
        em:
          type: object
    VariableType:
      enum:
      - NUMERIC
      - CHARACTER
      type: string
    VersionState:
      enum:
      - DRAFT
      - RELEASED
      - ARCHIVED
      - DEACCESSIONED
      type: string
    WorkflowComment:
      type: object
      properties:
        id:
          format: int64
          type: integer
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        type:
          $ref: '#/components/schemas/Type1'
        message:
          type: string
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        created:
          type: object
        toBeShown:
          type: boolean
    WorkflowServiceBean:
      type: object
      properties:
        em:
          type: object
        datasets:
          $ref: '#/components/schemas/DatasetServiceBean'
        dvObjects:
          $ref: '#/components/schemas/DvObjectServiceBean'
        settings:
          $ref: '#/components/schemas/SettingsServiceBean'
        roleAssignees:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        engine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        dvRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        providers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/WorkflowStepSPI'
    WorkflowStepSPI:
      type: object
    datasetFileDifferenceItem:
      type: object
      properties:
        fileId:
          type: string
        fileChecksumType:
          $ref: '#/components/schemas/ChecksumType'
        fileChecksumValue:
          type: string
        fileName1:
          type: string
        fileType1:
          type: string
        fileSize1:
          type: string
        fileCat1:
          type: string
        fileDesc1:
          type: string
        fileProvFree1:
          type: string
        fileRest1:
          type: string
        fileName2:
          type: string
        fileType2:
          type: string
        fileSize2:
          type: string
        fileCat2:
          type: string
        fileDesc2:
          type: string
        fileProvFree2:
          type: string
        fileRest2:
          type: string
        file1Empty:
          type: boolean
        file2Empty:
          type: boolean
    datasetReplaceFileItem:
      type: object
      properties:
        fdi:
          $ref: '#/components/schemas/datasetFileDifferenceItem'
        leftColumn:
          type: string
        file1Id:
          type: string
        file2Id:
          type: string
        file1ChecksumType:
          $ref: '#/components/schemas/ChecksumType'
        file2ChecksumType:
          $ref: '#/components/schemas/ChecksumType'
        file1ChecksumValue:
          type: string
        file2ChecksumValue:
          type: string
